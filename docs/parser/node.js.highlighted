<div class="highlight" ><pre><span class="nx">AP</span><span class="o">.</span><span class="nx">add</span><span class="o">(</span><span class="s1">&#39;node&#39;</span><span class="o">,</span> <span class="k">function</span> <span class="o">(</span><span class="nx">A</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">var</span> <span class="nx">Q</span> <span class="o">=</span> <span class="nx">A</span><span class="o">.</span><span class="nx">QuerySelector</span><span class="o">;</span>
    <span class="nx">A</span><span class="o">.</span><span class="nx">Node</span> <span class="o">=</span> <span class="k">function</span> <span class="o">(</span><span class="nx">query</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nx">El</span><span class="o">(</span><span class="nx">A</span><span class="o">.</span><span class="nb">Array</span><span class="o">(</span><span class="nx">Q</span><span class="o">(</span><span class="nx">query</span><span class="o">)));</span>
    <span class="o">};</span>
    
    <span class="k">var</span> <span class="nx">El</span> <span class="o">=</span> <span class="k">function</span> <span class="o">(</span><span class="nx">nodes</span><span class="o">)</span> <span class="o">{</span>
        <span class="nx">A</span><span class="o">.</span><span class="nb">Array</span><span class="o">.</span><span class="nx">each</span><span class="o">(</span><span class="nx">nodes</span><span class="o">,</span> <span class="k">function</span> <span class="o">(</span><span class="nx">value</span><span class="o">,</span> <span class="nx">index</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">[</span><span class="nx">index</span><span class="o">]</span> <span class="o">=</span> <span class="nx">value</span><span class="o">;</span>
        <span class="o">},</span> <span class="k">this</span><span class="o">);</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
    <span class="o">};</span>
    
    <span class="nx">El</span><span class="o">.</span><span class="nx">prototype</span><span class="o">.</span><span class="nx">each</span> <span class="o">=</span> <span class="k">function</span> <span class="o">(</span><span class="nx">fn</span><span class="o">,</span> <span class="nx">c</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nx">A</span><span class="o">.</span><span class="nb">Array</span><span class="o">.</span><span class="nx">each</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="nx">nodes</span><span class="o">,</span> <span class="nx">fn</span><span class="o">,</span> <span class="nx">c</span><span class="o">);</span>
    <span class="o">};</span>
    
    <span class="c">// A.Node.prototype = {</span>
<span class="c"></span>    <span class="c">//     each : function (fn, c) {</span>
<span class="c"></span>    <span class="c">//         A.Array.each(this.nodes, fn, c);</span>
<span class="c"></span>    <span class="c">//     }</span>
<span class="c"></span>    <span class="c">// };</span>
<span class="c"></span>    
<span class="o">},</span> <span class="s1">&#39;0.0.1&#39;</span><span class="o">,</span> <span class="o">[</span>
    <span class="o">{</span> <span class="nx">name</span> <span class="o">:</span> <span class="s1">&#39;querySelector&#39;</span><span class="o">,</span> <span class="nx">minVersion</span> <span class="o">:</span> <span class="s1">&#39;0.0.1&#39;</span> <span class="o">},</span>
    <span class="o">{</span> <span class="nx">name</span> <span class="o">:</span> <span class="s1">&#39;array&#39;</span><span class="o">,</span> <span class="nx">minVersion</span> <span class="o">:</span> <span class="s1">&#39;1.0.0&#39;</span> <span class="o">}</span>
<span class="o">]);</span>
</pre></div>
