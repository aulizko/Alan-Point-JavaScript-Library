<div class="highlight" ><pre><span class="nx">AP</span><span class="o">.</span><span class="nx">add</span><span class="o">(</span><span class="s1">&#39;history&#39;</span><span class="o">,</span> <span class="k">function</span> <span class="o">(</span><span class="nx">A</span><span class="o">)</span> <span class="o">{</span>
    <span class="c">/**</span>
<span class="c">     * History managment, for ajax-based pages</span>
<span class="c">     * Inspired with jQuery history plugin</span>
<span class="c">     * @module history</span>
<span class="c">     * @class History</span>
<span class="c">     * @constructor</span>
<span class="c">     * todo: augment with cool modules mechanism inspired from HistoryManager MooTools plugin</span>
<span class="c">     * todo: try to avoid clicking sound in ie with activeX object (read javascript.ru cross-site scripting article)</span>
<span class="c">     */</span>
    <span class="nx">A</span><span class="o">.</span><span class="nx">History</span> <span class="o">=</span> <span class="k">function</span> <span class="o">()</span> <span class="o">{</span>
        <span class="k">var</span>
        <span class="c">/**</span>
<span class="c">         * @property currentHash</span>
<span class="c">         * @private</span>
<span class="c">         */</span>
        <span class="nx">currentHash</span><span class="o">,</span>
        <span class="c">/**</span>
<span class="c">         * @property _callback</span>
<span class="c">         * @private</span>
<span class="c">         */</span>
        <span class="nx">_callback</span><span class="o">,</span>

        <span class="nx">historyBackStack</span><span class="o">,</span>

        <span class="nx">historyForwardStack</span><span class="o">,</span>

        <span class="nx">isFirst</span><span class="o">,</span>

        <span class="nx">dontCheck</span><span class="o">,</span>
        
        <span class="nx">ie</span> <span class="o">=</span> <span class="nx">A</span><span class="o">.</span><span class="nx">Browser</span><span class="o">.</span><span class="nx">trident</span><span class="o">,</span>
        
        <span class="nx">safari</span> <span class="o">=</span> <span class="nx">A</span><span class="o">.</span><span class="nx">Browser</span><span class="o">.</span><span class="nx">webkit</span><span class="o">,</span>

        <span class="nx">check</span> <span class="o">=</span> <span class="k">function</span> <span class="o">()</span> <span class="o">{</span>
            <span class="k">var</span> <span class="nx">i</span><span class="o">,</span> <span class="nx">hash</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="nx">ie</span><span class="o">)</span> <span class="o">{</span>
                <span class="c">// On IE, check for location.hash of iframe</span>
<span class="c"></span>                <span class="k">return</span> <span class="k">function</span> <span class="o">()</span> <span class="o">{</span>
                    <span class="k">var</span> <span class="nx">ihistory</span> <span class="o">=</span> <span class="nb">document</span><span class="o">.</span><span class="nx">getElementById</span><span class="o">(</span><span class="s1">&#39;APHistory&#39;</span><span class="o">);</span>
                    <span class="k">var</span> <span class="nx">iframe</span> <span class="o">=</span> <span class="nx">ihistory</span><span class="o">.</span><span class="nx">contentDocument</span> <span class="o">||</span> <span class="nx">ihistory</span><span class="o">.</span><span class="nx">contentWindow</span><span class="o">.</span><span class="nb">document</span><span class="o">;</span>
                    <span class="nx">hash</span> <span class="o">=</span> <span class="nx">iframe</span><span class="o">.</span><span class="nx">location</span><span class="o">.</span><span class="nx">hash</span><span class="o">;</span>
                    <span class="k">if</span><span class="o">(</span><span class="nx">hash</span> <span class="o">!=</span> <span class="nx">currentHash</span><span class="o">)</span> <span class="o">{</span>

                        <span class="nx">location</span><span class="o">.</span><span class="nx">hash</span> <span class="o">=</span> <span class="nx">hash</span><span class="o">;</span>
                        <span class="nx">currentHash</span> <span class="o">=</span> <span class="nx">hash</span><span class="o">;</span>
                        <span class="nx">_callback</span><span class="o">(</span><span class="nx">hash</span><span class="o">.</span><span class="nx">replace</span><span class="o">(</span><span class="sr">/^#/</span><span class="o">,</span> <span class="s1">&#39;&#39;</span><span class="o">));</span>
                    <span class="o">}</span>
                <span class="o">};</span>
            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="nx">safari</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">return</span> <span class="k">function</span> <span class="o">()</span> <span class="o">{</span>
                    <span class="k">if</span> <span class="o">(</span><span class="nx">dontCheck</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">var</span> <span class="nx">historyDelta</span> <span class="o">=</span> <span class="nx">history</span><span class="o">.</span><span class="nx">length</span> <span class="o">-</span> <span class="nx">historyBackStack</span><span class="o">.</span><span class="nx">length</span><span class="o">;</span>

                        <span class="k">if</span> <span class="o">(</span><span class="nx">historyDelta</span><span class="o">)</span> <span class="o">{</span> <span class="c">// back or forward button has been pushed</span>
<span class="c"></span>                            <span class="nx">isFirst</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                            <span class="k">if</span> <span class="o">(</span><span class="nx">historyDelta</span> <span class="o">&lt;</span> <span class="m">0</span><span class="o">)</span> <span class="o">{</span> <span class="c">// back button has been pushed</span>
<span class="c"></span>                                <span class="c">// move items to forward stack</span>
<span class="c"></span>                                <span class="k">for</span> <span class="o">(</span><span class="nx">i</span> <span class="o">=</span> <span class="m">0</span><span class="o">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nb">Math</span><span class="o">.</span><span class="nx">abs</span><span class="o">(</span><span class="nx">historyDelta</span><span class="o">);</span> <span class="nx">i</span><span class="o">++)</span> <span class="nx">historyForwardStack</span><span class="o">.</span><span class="nx">unshift</span><span class="o">(</span><span class="nx">historyBackStack</span><span class="o">.</span><span class="nx">pop</span><span class="o">());</span>
                            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span> <span class="c">// forward button has been pushed</span>
<span class="c"></span>                                <span class="c">// move items to back stack</span>
<span class="c"></span>                                <span class="k">for</span> <span class="o">(</span><span class="nx">i</span> <span class="o">=</span> <span class="m">0</span><span class="o">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">historyDelta</span><span class="o">;</span> <span class="nx">i</span><span class="o">++)</span> <span class="nx">historyBackStack</span><span class="o">.</span><span class="nx">push</span><span class="o">(</span><span class="nx">historyForwardStack</span><span class="o">.</span><span class="nx">shift</span><span class="o">());</span>
                            <span class="o">}</span>
                            <span class="k">var</span> <span class="nx">cachedHash</span> <span class="o">=</span> <span class="nx">historyBackStack</span><span class="o">[</span><span class="nx">historyBackStack</span><span class="o">.</span><span class="nx">length</span> <span class="o">-</span> <span class="m">1</span><span class="o">];</span>
                            <span class="k">if</span> <span class="o">(</span><span class="nx">cachedHash</span> <span class="o">!=</span> <span class="kc">undefined</span><span class="o">)</span> <span class="o">{</span>
                                <span class="nx">currentHash</span> <span class="o">=</span> <span class="nx">location</span><span class="o">.</span><span class="nx">hash</span><span class="o">;</span>
                                <span class="nx">_callback</span><span class="o">(</span><span class="nx">cachedHash</span><span class="o">);</span>
                            <span class="o">}</span>
                        <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="nx">historyBackStack</span><span class="o">[</span><span class="nx">historyBackStack</span><span class="o">.</span><span class="nx">length</span> <span class="o">-</span> <span class="m">1</span><span class="o">]</span> <span class="o">==</span> <span class="kc">undefined</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">isFirst</span><span class="o">)</span> <span class="o">{</span>
                            <span class="c">// back button has been pushed to beginning and URL already pointed to hash (e.g. a bookmark)</span>
<span class="c"></span>                            <span class="c">// document.URL doesn&#39;t change in Safari</span>
<span class="c"></span>                            <span class="k">if</span> <span class="o">(</span><span class="nb">document</span><span class="o">.</span><span class="nx">URL</span><span class="o">.</span><span class="nx">indexOf</span><span class="o">(</span><span class="s1">&#39;#&#39;</span><span class="o">)</span> <span class="o">&gt;=</span> <span class="m">0</span><span class="o">)</span> <span class="o">{</span>
                                <span class="nx">_callback</span><span class="o">(</span><span class="nb">document</span><span class="o">.</span><span class="nx">URL</span><span class="o">.</span><span class="nx">split</span><span class="o">(</span><span class="s1">&#39;#&#39;</span><span class="o">)[</span><span class="m">1</span><span class="o">]);</span>
                            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                                <span class="nx">_callback</span><span class="o">(</span><span class="s1">&#39;&#39;</span><span class="o">);</span>
                            <span class="o">}</span>
                            <span class="nx">isFirst</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                        <span class="o">}</span>
                    <span class="o">}</span>
                <span class="o">};</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="c">// otherwise, check for location.hash</span>
<span class="c"></span>                <span class="k">return</span> <span class="k">function</span> <span class="o">()</span> <span class="o">{</span>
                    <span class="nx">hash</span> <span class="o">=</span> <span class="nx">location</span><span class="o">.</span><span class="nx">hash</span><span class="o">;</span>
                    <span class="k">if</span><span class="o">(</span><span class="nx">hash</span> <span class="o">!=</span> <span class="nx">currentHash</span><span class="o">)</span> <span class="o">{</span>
                        <span class="nx">currentHash</span> <span class="o">=</span> <span class="nx">hash</span><span class="o">;</span>
                        <span class="nx">_callback</span><span class="o">(</span><span class="nx">hash</span><span class="o">.</span><span class="nx">replace</span><span class="o">(</span><span class="sr">/^#/</span><span class="o">,</span> <span class="s1">&#39;&#39;</span><span class="o">));</span>
                    <span class="o">}</span>
                <span class="o">};</span>
            <span class="o">}</span>
        <span class="o">}();</span>

        <span class="k">return</span> <span class="o">{</span>
            <span class="nx">initialize</span> <span class="o">:</span> <span class="k">function</span> <span class="o">(</span><span class="nx">callback</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="nx">ie</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="k">function</span> <span class="o">(</span><span class="nx">callback</span><span class="o">)</span> <span class="o">{</span>
                        <span class="nx">_callback</span> <span class="o">=</span> <span class="nx">callback</span><span class="o">;</span>
                        <span class="nx">currentHash</span> <span class="o">=</span> <span class="nx">location</span><span class="o">.</span><span class="nx">hash</span><span class="o">;</span>
                        <span class="c">// To stop the callback firing twice during initilization if no hash present</span>
<span class="c"></span>                        <span class="k">if</span> <span class="o">(</span><span class="nx">currentHash</span> <span class="o">==</span> <span class="s1">&#39;&#39;</span><span class="o">)</span> <span class="o">{</span>
                            <span class="nx">currentHash</span> <span class="o">=</span> <span class="s1">&#39;#&#39;</span><span class="o">;</span>
                        <span class="o">}</span>

                        <span class="c">// add hidden iframe for IE</span>
<span class="c"></span>                        <span class="k">var</span> <span class="nx">temp</span> <span class="o">=</span> <span class="nb">document</span><span class="o">.</span><span class="nx">createElement</span><span class="o">(</span><span class="s1">&#39;iframe&#39;</span><span class="o">);</span>
                        <span class="nx">temp</span><span class="o">.</span><span class="nx">id</span> <span class="o">=</span> <span class="s1">&#39;APHistory&#39;</span><span class="o">;</span>
                        <span class="nx">temp</span><span class="o">.</span><span class="nx">style</span><span class="o">.</span><span class="nx">display</span> <span class="o">=</span> <span class="s1">&#39;none&#39;</span><span class="o">;</span>
                        <span class="nb">document</span><span class="o">.</span><span class="nx">body</span><span class="o">.</span><span class="nx">appendChild</span><span class="o">(</span><span class="nx">temp</span><span class="o">);</span>
                        
                        
                        <span class="k">var</span> <span class="nx">iframe</span> <span class="o">=</span> <span class="nx">temp</span><span class="o">.</span><span class="nx">contentWindow</span><span class="o">.</span><span class="nb">document</span><span class="o">;</span>
                        
                        <span class="nx">iframe</span><span class="o">.</span><span class="nx">open</span><span class="o">();</span>
                        <span class="nx">iframe</span><span class="o">.</span><span class="nx">close</span><span class="o">();</span>
                        <span class="nx">iframe</span><span class="o">.</span><span class="nx">location</span><span class="o">.</span><span class="nx">hash</span> <span class="o">=</span> <span class="nx">currentHash</span><span class="o">;</span>
                        
                        <span class="nx">_callback</span><span class="o">(</span><span class="nx">currentHash</span><span class="o">.</span><span class="nx">replace</span><span class="o">(</span><span class="sr">/^#/</span><span class="o">,</span> <span class="s1">&#39;&#39;</span><span class="o">));</span>
                        <span class="nx">setInterval</span><span class="o">(</span><span class="nx">check</span><span class="o">,</span> <span class="m">100</span><span class="o">);</span>
                        
                        <span class="nx">temp</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
                        <span class="nx">delete</span> <span class="nx">temp</span><span class="o">;</span>
                    <span class="o">};</span>
                <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="nx">safari</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="k">function</span> <span class="o">(</span><span class="nx">callback</span><span class="o">)</span> <span class="o">{</span>
                        <span class="nx">_callback</span> <span class="o">=</span> <span class="nx">callback</span><span class="o">;</span>
                        <span class="nx">currentHash</span> <span class="o">=</span> <span class="nx">location</span><span class="o">.</span><span class="nx">hash</span><span class="o">;</span>
                        <span class="c">// etablish back/forward stacks</span>
<span class="c"></span>
                        <span class="nx">historyBackStack</span> <span class="o">=</span> <span class="o">[];</span>
                        <span class="nx">historyBackStack</span><span class="o">.</span><span class="nx">length</span> <span class="o">=</span> <span class="nx">history</span><span class="o">.</span><span class="nx">length</span><span class="o">;</span>
                        <span class="nx">historyForwardStack</span> <span class="o">=</span> <span class="o">[];</span>
                        <span class="nx">isFirst</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                        <span class="nx">dontCheck</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                        
                        <span class="nx">_callback</span><span class="o">(</span><span class="nx">currentHash</span><span class="o">.</span><span class="nx">replace</span><span class="o">(</span><span class="sr">/^#/</span><span class="o">,</span> <span class="s1">&#39;&#39;</span><span class="o">));</span>
                        <span class="nx">setInterval</span><span class="o">(</span><span class="nx">check</span><span class="o">,</span> <span class="m">100</span><span class="o">);</span>
                    <span class="o">};</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="k">function</span> <span class="o">(</span><span class="nx">callback</span><span class="o">)</span> <span class="o">{</span>
                        <span class="nx">_callback</span> <span class="o">=</span> <span class="nx">callback</span><span class="o">;</span>
                        <span class="nx">currentHash</span> <span class="o">=</span> <span class="nx">location</span><span class="o">.</span><span class="nx">hash</span><span class="o">;</span>
                        <span class="nx">_callback</span><span class="o">(</span><span class="nx">currentHash</span><span class="o">.</span><span class="nx">replace</span><span class="o">(</span><span class="sr">/^#/</span><span class="o">,</span> <span class="s1">&#39;&#39;</span><span class="o">));</span>
                        <span class="nx">setInterval</span><span class="o">(</span><span class="nx">check</span><span class="o">,</span> <span class="m">100</span><span class="o">);</span>
                    <span class="o">};</span>
                <span class="o">}</span>
            <span class="o">}(),</span>

            <span class="nx">add</span> <span class="o">:</span> <span class="k">function</span> <span class="o">(</span><span class="nx">hash</span><span class="o">)</span> <span class="o">{</span>
                <span class="c">// This makes the looping function do something</span>
<span class="c"></span>                <span class="nx">historyBackStack</span><span class="o">.</span><span class="nx">push</span><span class="o">(</span><span class="nx">hash</span><span class="o">);</span>

                <span class="nx">historyForwardStack</span><span class="o">.</span><span class="nx">length</span> <span class="o">=</span> <span class="m">0</span><span class="o">;</span> <span class="c">// clear forwardStack (true click occured)</span>
<span class="c"></span>                <span class="nx">isFirst</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
            <span class="o">},</span>

            <span class="c">/**</span>
<span class="c">             *</span>
<span class="c">             * @param hash {String} desiring hash without first #</span>
<span class="c">             */</span>
            <span class="nx">load</span> <span class="o">:</span> <span class="k">function</span><span class="o">(</span><span class="nx">hash</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="nx">safari</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="k">function</span> <span class="o">(</span><span class="nx">hash</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">var</span> <span class="nx">newhash</span><span class="o">;</span>
                        <span class="nx">newhash</span> <span class="o">=</span> <span class="nx">hash</span><span class="o">;</span>
                        
                        <span class="nx">currentHash</span> <span class="o">=</span> <span class="nx">newhash</span><span class="o">;</span>
                        
                        <span class="nx">dontCheck</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                        <span class="c">// Manually keep track of the history values for Safari</span>
<span class="c"></span>                        <span class="k">this</span><span class="o">.</span><span class="nx">add</span><span class="o">(</span><span class="nx">hash</span><span class="o">);</span>

                        <span class="c">// Wait a while before allowing checking so that Safari has time to update the &quot;history&quot; object</span>
<span class="c"></span>                        <span class="c">// correctly (otherwise the check loop would detect a false change in hash).</span>
<span class="c"></span>                        <span class="k">var</span> <span class="nx">fn</span> <span class="o">=</span> <span class="k">function</span><span class="o">()</span> <span class="o">{</span><span class="nx">AP</span><span class="o">.</span><span class="nx">History</span><span class="o">.</span><span class="nx">setCheck</span><span class="o">(</span><span class="kc">false</span><span class="o">);};</span>
                        <span class="nb">window</span><span class="o">.</span><span class="nx">setTimeout</span><span class="o">(</span><span class="nx">fn</span><span class="o">,</span> <span class="m">200</span><span class="o">);</span>
                        <span class="nx">_callback</span><span class="o">(</span><span class="nx">hash</span><span class="o">);</span>
                        <span class="c">// N.B. &quot;location.hash=&quot; must be the last line of code for Safari as execution stops afterwards.</span>
<span class="c"></span>                        <span class="c">//      By explicitly using the &quot;location.hash&quot; command (instead of using a variable set to &quot;location.hash&quot;) the</span>
<span class="c"></span>                        <span class="c">//      URL in the browser and the &quot;history&quot; object are both updated correctly.</span>
<span class="c"></span>                        <span class="nx">location</span><span class="o">.</span><span class="nx">hash</span> <span class="o">=</span> <span class="nx">newhash</span><span class="o">;</span>
                    <span class="o">};</span>
                <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="nx">ie</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="k">function</span> <span class="o">(</span><span class="nx">hash</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">var</span> <span class="nx">newhash</span><span class="o">;</span>
                        
                        <span class="nx">newhash</span> <span class="o">=</span> <span class="s1">&#39;#&#39;</span> <span class="o">+</span> <span class="nx">hash</span><span class="o">;</span>
                        <span class="nx">location</span><span class="o">.</span><span class="nx">hash</span> <span class="o">=</span> <span class="nx">newhash</span><span class="o">;</span>
                        
                        <span class="nx">currentHash</span> <span class="o">=</span> <span class="nx">newhash</span><span class="o">;</span>
                        
                        <span class="k">var</span> <span class="nx">ihistory</span> <span class="o">=</span> <span class="nx">$</span><span class="o">(</span><span class="s2">&quot;#APHistory&quot;</span><span class="o">)[</span><span class="m">0</span><span class="o">];</span> <span class="c">// TODO: need contentDocument?</span>
<span class="c"></span>                        <span class="k">var</span> <span class="nx">iframe</span> <span class="o">=</span> <span class="nx">ihistory</span><span class="o">.</span><span class="nx">contentWindow</span><span class="o">.</span><span class="nb">document</span><span class="o">;</span>
                        <span class="nx">iframe</span><span class="o">.</span><span class="nx">open</span><span class="o">();</span>
                        <span class="nx">iframe</span><span class="o">.</span><span class="nx">close</span><span class="o">();</span>
                        <span class="nx">iframe</span><span class="o">.</span><span class="nx">location</span><span class="o">.</span><span class="nx">hash</span> <span class="o">=</span> <span class="nx">newhash</span><span class="o">;</span>
                        <span class="nx">_callback</span><span class="o">(</span><span class="nx">hash</span><span class="o">);</span>
                    <span class="o">};</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="k">function</span> <span class="o">(</span><span class="nx">hash</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">var</span> <span class="nx">newhash</span><span class="o">;</span>

                        <span class="nx">newhash</span> <span class="o">=</span> <span class="s1">&#39;#&#39;</span> <span class="o">+</span> <span class="nx">hash</span><span class="o">;</span>
                        <span class="nx">location</span><span class="o">.</span><span class="nx">hash</span> <span class="o">=</span> <span class="nx">newhash</span><span class="o">;</span>

                        <span class="nx">currentHash</span> <span class="o">=</span> <span class="nx">newhash</span><span class="o">;</span>

                        <span class="nx">_callback</span><span class="o">(</span><span class="nx">hash</span><span class="o">);</span>
                    <span class="o">};</span>
                <span class="o">}</span>
            <span class="o">}(),</span>

            <span class="c">/**</span>
<span class="c">             * Set need we check, or not.</span>
<span class="c">             * @param check {Boolean}</span>
<span class="c">             * @protected</span>
<span class="c">             */</span>
            <span class="nx">setCheck</span> <span class="o">:</span> <span class="k">function</span> <span class="o">(</span><span class="nx">check</span><span class="o">)</span> <span class="o">{</span>
                <span class="nx">dontCheck</span> <span class="o">=</span> <span class="nx">check</span><span class="o">;</span>
            <span class="o">},</span>

            <span class="c">/**</span>
<span class="c">             * @method getCurrentHash</span>
<span class="c">             * @return {String}</span>
<span class="c">             */</span>
            <span class="nx">getCurrentHash</span> <span class="o">:</span> <span class="k">function</span> <span class="o">()</span> <span class="o">{</span>
                <span class="k">return</span> <span class="nx">currentHash</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">};</span>
    <span class="o">}();</span>


<span class="o">},</span> <span class="s1">&#39;0.0.1&#39;</span><span class="o">,</span> <span class="o">[</span>
    <span class="o">{</span> <span class="nx">name</span> <span class="o">:</span> <span class="s1">&#39;browser&#39;</span><span class="o">,</span> <span class="nx">minVersion</span> <span class="o">:</span> <span class="s1">&#39;0.0.2&#39;</span> <span class="o">}</span>
<span class="o">]);</span>
</pre></div>
