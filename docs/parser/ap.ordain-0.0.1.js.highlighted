<div class="highlight" ><pre><span class="nx">AP</span><span class="o">.</span><span class="nx">add</span><span class="o">(</span><span class="s1">&#39;ordain&#39;</span><span class="o">,</span> <span class="k">function</span> <span class="o">(</span><span class="nx">A</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">var</span> <span class="nx">L</span> <span class="o">=</span> <span class="nx">A</span><span class="o">.</span><span class="nx">Lang</span><span class="o">;</span>

    <span class="nx">A</span><span class="o">.</span><span class="nx">Ordain</span> <span class="o">=</span> <span class="k">function</span> <span class="o">()</span> <span class="o">{</span>
        <span class="c">// Make Ordain able been used both factory and object models</span>
<span class="c"></span>        <span class="k">var</span> <span class="nx">me</span> <span class="o">=</span> <span class="k">this</span> <span class="k">instanceof</span> <span class="nx">A</span><span class="o">.</span><span class="nx">Ordain</span> <span class="o">?</span> <span class="k">this</span> <span class="o">:</span> <span class="k">new</span> <span class="nx">A</span><span class="o">.</span><span class="nx">Ordain</span><span class="o">(),</span>
            <span class="nx">clickHandlers</span> <span class="o">=</span> <span class="o">{},</span> <span class="nx">mouseOverHandlers</span> <span class="o">=</span> <span class="o">{},</span> <span class="nx">mouseOutHandlers</span> <span class="o">=</span> <span class="o">{},</span> <span class="nx">focusHandlers</span> <span class="o">=</span> <span class="o">{},</span> <span class="nx">blurHandlers</span> <span class="o">=</span> <span class="o">{},</span>
            <span class="nx">keyUpHandlers</span> <span class="o">=</span> <span class="o">{},</span> <span class="nx">keyDownHandlers</span> <span class="o">=</span> <span class="o">{},</span> <span class="nx">keyPressHandlers</span> <span class="o">=</span> <span class="o">{},</span>

            <span class="c">/**</span>
<span class="c">             * @method process</span>
<span class="c">             * @param selector {String} css selector for element</span>
<span class="c">             * @param theEvent {String} type of the event</span>
<span class="c">             * @param handler {Function} handler for the event</span>
<span class="c">             * @param context {Object} context for the handler function (opt)</span>
<span class="c">             *</span>
<span class="c">             * Also, you can pass all this params as object with same field, or several object or array of objects</span>
<span class="c">             */</span>
            <span class="nx">process</span> <span class="o">=</span> <span class="k">function</span> <span class="o">()</span> <span class="o">{</span>
                <span class="k">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="nx">arguments</span><span class="o">[</span><span class="m">0</span><span class="o">],</span> <span class="nx">length</span> <span class="o">=</span> <span class="nx">arguments</span><span class="o">.</span><span class="nx">length</span><span class="o">;</span>

                <span class="k">if</span> <span class="o">(</span><span class="nx">L</span><span class="o">.</span><span class="nx">isString</span><span class="o">(</span><span class="nx">a</span><span class="o">))</span> <span class="o">{</span>
                    <span class="k">this</span><span class="o">.</span><span class="nx">declare</span><span class="o">(</span><span class="nx">arguments</span><span class="o">);</span>
                    <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
                <span class="o">}</span>

                <span class="k">if</span> <span class="o">(</span><span class="nx">L</span><span class="o">.</span><span class="nx">isArray</span><span class="o">(</span><span class="nx">a</span><span class="o">))</span> <span class="o">{</span>
                    <span class="nx">A</span><span class="o">.</span><span class="nb">Array</span><span class="o">.</span><span class="nx">each</span><span class="o">(</span><span class="nx">a</span><span class="o">,</span> <span class="k">function</span> <span class="o">(</span><span class="nx">o</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">this</span><span class="o">.</span><span class="nx">declare</span><span class="o">(</span><span class="nx">o</span><span class="o">.</span><span class="nx">selector</span><span class="o">,</span> <span class="nx">o</span><span class="o">.</span><span class="nx">event</span><span class="o">,</span> <span class="nx">o</span><span class="o">.</span><span class="nx">handler</span><span class="o">,</span>  <span class="nx">o</span><span class="o">.</span><span class="nx">context</span><span class="o">);</span>
                    <span class="o">},</span> <span class="k">this</span><span class="o">);</span>

                    <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
                <span class="o">}</span>

                <span class="k">if</span> <span class="o">(</span><span class="nx">L</span><span class="o">.</span><span class="nx">isObject</span><span class="o">(</span><span class="nx">a</span><span class="o">))</span> <span class="o">{</span>
                    <span class="c">// check if there is more than one object</span>
<span class="c"></span>                    <span class="k">if</span> <span class="o">(</span><span class="nx">length</span> <span class="o">==</span> <span class="m">1</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">this</span><span class="o">.</span><span class="nx">declare</span><span class="o">(</span><span class="nx">a</span><span class="o">.</span><span class="nx">selector</span><span class="o">,</span> <span class="nx">a</span><span class="o">.</span><span class="nx">event</span><span class="o">,</span> <span class="nx">a</span><span class="o">.</span><span class="nx">handler</span><span class="o">,</span> <span class="nx">a</span><span class="o">.</span><span class="nx">context</span><span class="o">);</span>
                        <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                        <span class="nx">A</span><span class="o">.</span><span class="nb">Array</span><span class="o">.</span><span class="nx">each</span><span class="o">(</span><span class="nx">arguments</span><span class="o">,</span> <span class="k">function</span> <span class="o">(</span><span class="nx">o</span><span class="o">)</span> <span class="o">{</span>
                            <span class="k">this</span><span class="o">.</span><span class="nx">declare</span><span class="o">(</span><span class="nx">o</span><span class="o">.</span><span class="nx">selector</span><span class="o">,</span> <span class="nx">o</span><span class="o">.</span><span class="nx">event</span><span class="o">,</span> <span class="nx">o</span><span class="o">.</span><span class="nx">handler</span><span class="o">,</span>  <span class="nx">o</span><span class="o">.</span><span class="nx">context</span><span class="o">);</span>
                        <span class="o">},</span> <span class="k">this</span><span class="o">);</span>
                        <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">},</span>

            <span class="nx">declare</span> <span class="o">=</span> <span class="k">function</span> <span class="o">(</span><span class="nx">sel</span><span class="o">,</span> <span class="nx">evt</span><span class="o">,</span> <span class="nx">handler</span><span class="o">,</span> <span class="nx">context</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">var</span> <span class="nx">hnd</span> <span class="o">=</span> <span class="k">this</span><span class="o">[</span><span class="nx">evt</span><span class="o">];</span>
                <span class="k">if</span><span class="o">(!</span><span class="nx">hnd</span><span class="o">[</span><span class="nx">sel</span><span class="o">])</span> <span class="o">{</span><span class="nx">hnd</span><span class="o">[</span><span class="nx">sel</span><span class="o">]=[];}</span>
                <span class="nx">hnd</span><span class="o">.</span><span class="nx">push</span><span class="o">({</span> <span class="nx">handler</span> <span class="o">:</span> <span class="nx">handler</span><span class="o">,</span> <span class="nx">context</span> <span class="o">:</span> <span class="nx">context</span> <span class="o">});</span>
            <span class="o">},</span>

            <span class="nx">defineTarget</span> <span class="o">=</span> <span class="k">function</span> <span class="o">(</span><span class="c">/* Event */</span><span class="nx">evt</span><span class="o">,</span> <span class="c">/*String*/</span><span class="nx">condition</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">var</span> <span class="nx">elem</span><span class="o">;</span>

                <span class="k">if</span> <span class="o">(</span><span class="nx">evt</span><span class="o">.</span><span class="nx">target</span><span class="o">)</span> <span class="o">{</span>
                    <span class="nx">elem</span> <span class="o">=</span> <span class="nx">evt</span><span class="o">.</span><span class="nx">target</span><span class="o">;</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="k">if</span> <span class="o">(</span><span class="nx">evt</span><span class="o">.</span><span class="nx">srcElement</span><span class="o">)</span> <span class="o">{</span>
                        <span class="nx">elem</span> <span class="o">=</span> <span class="nx">evt</span><span class="o">.</span><span class="nx">srcElement</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
                <span class="c">// defeat Safari bug</span>
<span class="c"></span>                <span class="k">if</span> <span class="o">(</span><span class="nx">elem</span><span class="o">.</span><span class="nx">nodeType</span> <span class="o">==</span> <span class="m">3</span><span class="o">)</span> <span class="o">{</span>
                    <span class="nx">elem</span> <span class="o">=</span> <span class="nx">elem</span><span class="o">.</span><span class="nx">parentNode</span><span class="o">;</span>
                <span class="o">}</span>

                <span class="k">if</span> <span class="o">(</span><span class="nx">L</span><span class="o">.</span><span class="nx">isUndefined</span><span class="o">(</span><span class="nx">elem</span><span class="o">))</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
                <span class="o">}</span>

                <span class="c">// work with classes</span>
<span class="c"></span>                <span class="k">if</span> <span class="o">(</span><span class="nx">$</span><span class="o">(</span><span class="nx">elem</span><span class="o">).</span><span class="nx">is</span><span class="o">(</span><span class="nx">condition</span><span class="o">))</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="nx">elem</span><span class="o">;</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="nx">$</span><span class="o">(</span><span class="nx">elem</span><span class="o">).</span><span class="nx">parents</span><span class="o">(</span><span class="nx">condition</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">},</span>

            <span class="nx">delegate</span> <span class="o">=</span> <span class="k">function</span> <span class="o">(</span><span class="nx">selectionHandlers</span><span class="o">,</span> <span class="nx">evt</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">var</span> <span class="nx">sel</span><span class="o">,</span> <span class="nx">target</span><span class="o">,</span> <span class="nx">handlers</span><span class="o">,</span> <span class="nx">q</span> <span class="o">=</span> <span class="nx">A</span><span class="o">.</span><span class="nx">Queue</span><span class="o">();</span>

                <span class="k">for</span> <span class="o">(</span><span class="nx">sel</span> <span class="k">in</span> <span class="nx">selectionHandlers</span><span class="o">)</span> <span class="o">{</span>
                    <span class="nx">target</span> <span class="o">=</span> <span class="nx">defineTarget</span><span class="o">(</span><span class="nx">evt</span><span class="o">,</span> <span class="nx">sel</span><span class="o">);</span>
                    <span class="k">if</span> <span class="o">(</span><span class="nx">target</span> <span class="o">===</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span> <span class="k">continue</span><span class="o">;</span> <span class="o">}</span>
                    <span class="nx">handlers</span> <span class="o">=</span> <span class="nx">selectionHandlers</span><span class="o">[</span><span class="nx">sel</span><span class="o">];</span>
                    <span class="nx">A</span><span class="o">.</span><span class="nb">Array</span><span class="o">(</span><span class="nx">handlers</span><span class="o">,</span> <span class="k">function</span> <span class="o">(</span><span class="nx">o</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">var</span> <span class="nx">c</span> <span class="o">=</span> <span class="o">{};</span>
                        <span class="nx">c</span><span class="o">.</span><span class="nx">fn</span> <span class="o">=</span> <span class="k">function</span> <span class="o">()</span> <span class="o">{</span> <span class="nx">o</span><span class="o">.</span><span class="nx">handler</span><span class="o">(</span><span class="nx">target</span><span class="o">,</span> <span class="nx">evt</span><span class="o">);</span> <span class="o">};</span>
                        <span class="k">if</span> <span class="o">(</span><span class="nx">o</span><span class="o">.</span><span class="nx">context</span><span class="o">)</span> <span class="o">{</span>
                            <span class="nx">c</span><span class="o">.</span><span class="nx">context</span> <span class="o">=</span> <span class="nx">o</span><span class="o">.</span><span class="nx">context</span><span class="o">;</span>
                        <span class="o">}</span>
                        <span class="nx">q</span><span class="o">.</span><span class="nx">add</span><span class="o">(</span><span class="nx">c</span><span class="o">);</span>
                    <span class="o">},</span> <span class="k">this</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="nx">q</span><span class="o">.</span><span class="nx">run</span><span class="o">();</span>
            <span class="o">};</span>

        <span class="nx">$</span><span class="o">(</span><span class="nb">document</span><span class="o">).</span><span class="nx">click</span><span class="o">(</span><span class="k">function</span> <span class="o">(</span><span class="nx">e</span><span class="o">)</span> <span class="o">{</span><span class="nx">delegate</span><span class="o">(</span><span class="nx">clickHandlers</span><span class="o">,</span> <span class="nx">e</span><span class="o">);});</span>
        <span class="nx">$</span><span class="o">(</span><span class="nb">document</span><span class="o">).</span><span class="nx">mouseover</span><span class="o">(</span><span class="k">function</span> <span class="o">(</span><span class="nx">e</span><span class="o">)</span> <span class="o">{</span><span class="nx">delegate</span><span class="o">(</span><span class="nx">mouseOverHandlers</span><span class="o">,</span> <span class="nx">e</span><span class="o">);});</span>
        <span class="nx">$</span><span class="o">(</span><span class="nb">document</span><span class="o">).</span><span class="nx">mouseout</span><span class="o">(</span><span class="k">function</span> <span class="o">(</span><span class="nx">e</span><span class="o">)</span> <span class="o">{</span><span class="nx">delegate</span><span class="o">(</span><span class="nx">mouseOutHandlers</span><span class="o">,</span> <span class="nx">e</span><span class="o">);});</span>
        <span class="nx">$</span><span class="o">(</span><span class="nb">document</span><span class="o">).</span><span class="nx">focus</span><span class="o">(</span><span class="k">function</span> <span class="o">(</span><span class="nx">e</span><span class="o">)</span> <span class="o">{</span><span class="nx">delegate</span><span class="o">(</span><span class="nx">focusHandlers</span><span class="o">,</span> <span class="nx">e</span><span class="o">);});</span>
        <span class="nx">$</span><span class="o">(</span><span class="nb">document</span><span class="o">).</span><span class="nx">blur</span><span class="o">(</span><span class="k">function</span> <span class="o">(</span><span class="nx">e</span><span class="o">)</span> <span class="o">{</span><span class="nx">delegate</span><span class="o">(</span><span class="nx">blurHandlers</span><span class="o">,</span> <span class="nx">e</span><span class="o">);});</span>
        <span class="nx">$</span><span class="o">(</span><span class="nb">document</span><span class="o">).</span><span class="nx">keydown</span><span class="o">(</span><span class="k">function</span> <span class="o">(</span><span class="nx">e</span><span class="o">)</span> <span class="o">{</span><span class="nx">delegate</span><span class="o">(</span><span class="nx">keyDownHandlers</span><span class="o">,</span> <span class="nx">e</span><span class="o">);});</span>
        <span class="nx">$</span><span class="o">(</span><span class="nb">document</span><span class="o">).</span><span class="nx">keypress</span><span class="o">(</span><span class="k">function</span> <span class="o">(</span><span class="nx">e</span><span class="o">)</span> <span class="o">{</span><span class="nx">delegate</span><span class="o">(</span><span class="nx">keyPressHandlers</span><span class="o">,</span> <span class="nx">e</span><span class="o">);});</span>
        <span class="nx">$</span><span class="o">(</span><span class="nb">document</span><span class="o">).</span><span class="nx">keyup</span><span class="o">(</span><span class="k">function</span> <span class="o">(</span><span class="nx">e</span><span class="o">)</span> <span class="o">{</span><span class="nx">delegate</span><span class="o">(</span><span class="nx">keyUpHandlers</span><span class="o">,</span> <span class="nx">e</span><span class="o">);});</span>



        <span class="k">return</span> <span class="nx">process</span><span class="o">.</span><span class="nx">apply</span><span class="o">(</span><span class="nx">me</span><span class="o">,</span> <span class="nx">arguments</span><span class="o">);</span>
    <span class="o">};</span>

    <span class="nx">A</span><span class="o">.</span><span class="nx">Ordain</span><span class="o">.</span><span class="nx">prototype</span> <span class="o">=</span> <span class="o">{</span>
        <span class="nx">click</span> <span class="o">:</span> <span class="k">function</span> <span class="o">(</span><span class="nx">sel</span><span class="o">,</span> <span class="nx">handler</span><span class="o">,</span> <span class="nx">context</span><span class="o">)</span> <span class="o">{</span>
            <span class="nx">declare</span><span class="o">(</span><span class="nx">sel</span><span class="o">,</span> <span class="s1">&#39;click&#39;</span><span class="o">,</span> <span class="nx">handler</span><span class="o">,</span> <span class="nx">context</span><span class="o">);</span>
        <span class="o">},</span>
        <span class="nx">hover</span> <span class="o">:</span> <span class="k">function</span> <span class="o">(</span><span class="nx">sel</span><span class="o">,</span> <span class="nx">overHandler</span><span class="o">,</span> <span class="nx">outHandler</span><span class="o">,</span> <span class="nx">context</span><span class="o">)</span> <span class="o">{</span>
            <span class="nx">declare</span><span class="o">(</span><span class="nx">sel</span><span class="o">,</span> <span class="s1">&#39;mouseover&#39;</span><span class="o">,</span> <span class="nx">overHandler</span><span class="o">,</span> <span class="nx">context</span><span class="o">);</span>
            <span class="nx">declare</span><span class="o">(</span><span class="nx">sel</span><span class="o">,</span> <span class="s1">&#39;mouseout&#39;</span><span class="o">,</span> <span class="nx">outHandler</span><span class="o">,</span> <span class="nx">context</span><span class="o">);</span>
        <span class="o">},</span>
        <span class="nx">focus</span> <span class="o">:</span> <span class="k">function</span> <span class="o">(</span><span class="nx">sel</span><span class="o">,</span> <span class="nx">focusHandler</span><span class="o">,</span> <span class="nx">blurHandler</span><span class="o">,</span> <span class="nx">context</span><span class="o">)</span> <span class="o">{</span>
            <span class="nx">declare</span><span class="o">(</span><span class="nx">sel</span><span class="o">,</span> <span class="s1">&#39;focus&#39;</span><span class="o">,</span> <span class="nx">focusHandler</span><span class="o">,</span> <span class="nx">context</span><span class="o">);</span>
            <span class="nx">declare</span><span class="o">(</span><span class="nx">sel</span><span class="o">,</span> <span class="s1">&#39;blur&#39;</span><span class="o">,</span> <span class="nx">blurHandler</span><span class="o">,</span> <span class="nx">context</span><span class="o">);</span>
        <span class="o">},</span>
        <span class="nx">key</span> <span class="o">:</span> <span class="k">function</span> <span class="o">(</span><span class="nx">sel</span><span class="o">,</span> <span class="nx">downHandler</span><span class="o">,</span> <span class="nx">pressHandler</span><span class="o">,</span> <span class="nx">upHandler</span><span class="o">,</span> <span class="nx">context</span><span class="o">)</span> <span class="o">{</span>
            <span class="nx">declare</span><span class="o">(</span><span class="nx">sel</span><span class="o">,</span> <span class="s1">&#39;keyDown&#39;</span><span class="o">,</span> <span class="nx">downHandler</span><span class="o">,</span> <span class="nx">context</span><span class="o">);</span>
            <span class="nx">declare</span><span class="o">(</span><span class="nx">sel</span><span class="o">,</span> <span class="s1">&#39;keyPress&#39;</span><span class="o">,</span> <span class="nx">pressHandler</span><span class="o">,</span> <span class="nx">context</span><span class="o">);</span>
            <span class="nx">declare</span><span class="o">(</span><span class="nx">sel</span><span class="o">,</span> <span class="s1">&#39;keyUp&#39;</span><span class="o">,</span> <span class="nx">upHandler</span><span class="o">,</span> <span class="nx">context</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">};</span>
<span class="o">},</span> <span class="s1">&#39;0.0.1&#39;</span><span class="o">);</span>
</pre></div>
