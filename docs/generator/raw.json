{"majorversion": 3, "classmap": {"Queue": {"name": "Queue", "constructors": [{"params": [{"type": "Function|Object", "name": "callback*", "description": "  Any number of callbacks to initialize the queue"}], "description": "Mechanism to execute a series of callbacks in a non-blocking queue.  Each\ncallback is executed via setTimout unless configured with a negative\ntimeout, in which case it is run in blocking mode in the same execution\nthread as the previous callback.  Callbacks can be function references or\nobject literals with the following keys:\n<ul>\n<li><code>fn<\/code> - {Function} REQUIRED the callback function.<\/li>\n<li><code>timeout<\/code> - {number} millisecond delay to wait after previous callback completion before executing this callback.  Negative values cause immediate blocking execution.  Default 0.<\/li>\n<li><code>until<\/code> - {Function} boolean function executed before each iteration.  Return true to indicate callback completion.<\/li>\n<li><code>iterations<\/code> - {Number} number of times to execute the callback before proceeding to the next callback in the queue. Incompatible with <code>until<\/code>.<\/li>\n<\/ul>"}], "namespace": "", "module": "queue", "guessedname": "Queue", "methods": {"_exec": {"protected": "", "params": [{"type": "Function", "name": "fn", "description": "  the function to execute"}, {"type": "Object | Function", "name": "c", "description": "  the callback as defined during add(c)"}], "description": "Executes the callback function", "guessedname": "exec", "guessedtype": "function"}, "add": {"return": {"type": "Queue", "description": "the Queue instance"}, "params": [{"type": "Function|Object", "name": "callback*", "description": "  Any number of callbacks"}], "description": "Add any number of callbacks to the end of the queue", "guessedname": "add", "guessedtype": "function"}, "pause": {"return": {"type": "Queue", "description": "the Queue instance"}, "description": "Pause the execution of the Queue after the execution of the current\ncallback completes.  If called from code outside of a queued callback,\nclears the timeout for the pending callback. Paused Queue can be\nrestarted with q.run()", "guessedname": "pause", "guessedtype": "function"}, "run": {"return": {"type": "Queue", "description": "the Queue instance"}, "description": "Execute the queue callbacks (also resumes paused Queue).", "guessedname": "run", "guessedtype": "function"}}, "file": "ap.queue-0.0.1.js", "guessedtype": "function", "shortname": "Queue", "properties": {"p": {"protected": "", "type": "{Array}", "description": "The callback queue", "guessedname": "p", "guessedtype": "property"}, "s": {"protected": "", "type": "{number}", "description": "Timeout id used to pause or stop execution and indicate the execution\nstate of the Queue.  0 indicates paused or stopped, negatives indicate\nblocking execution, and positives indicate non-blocking execution.", "guessedname": "s", "guessedtype": "property"}}, "description": "Mechanism to execute a series of callbacks in a non-blocking queue.  Each\ncallback is executed via setTimout unless configured with a negative\ntimeout, in which case it is run in blocking mode in the same execution\nthread as the previous callback.  Callbacks can be function references or\nobject literals with the following keys:\n<ul>\n<li><code>fn<\/code> - {Function} REQUIRED the callback function.<\/li>\n<li><code>timeout<\/code> - {number} millisecond delay to wait after previous callback completion before executing this callback.  Negative values cause immediate blocking execution.  Default 0.<\/li>\n<li><code>until<\/code> - {Function} boolean function executed before each iteration.  Return true to indicate callback completion.<\/li>\n<li><code>iterations<\/code> - {Number} number of times to execute the callback before proceeding to the next callback in the queue. Incompatible with <code>until<\/code>.<\/li>\n<\/ul>"}, "Supreme": {"name": "Supreme", "constructors": [{"params": [{"type": "Object", "name": "subject*", "description": "  Any number of objects"}], "description": "Manager of the project-related objects.\nEach object execute initialize or destroy method depend on reason param."}], "namespace": "", "module": "supreme", "guessedname": "Supreme", "methods": {"add": {"return": {"type": "Supreme", "description": "the Supreme instance"}, "params": [{"type": "Object", "name": "subject*", "description": "  Any number of objects"}], "description": "Add any number of subjects. Each of them have next properties:\n<ul>\n<li><code>reason<\/code> {Boolean} - is that object needed on current page.<\/li>\n<li><code>obj<\/code> {Object | Function} - object we working with. This object must have three properties:\n<ul><li><code>initialize<\/code> {Function} - function which initialize object (todo: make this opt)<\/li>\n<li><code>destroy<\/code> {Function} - method which destroyes all cached variables, remove memory links and \nsynchronize with server if needed<\/li>\n<li><code>className<\/code> {String} or <code>getClassName<\/code> {Function} - public property or method which \nequal project name on the current namespace. Used to delete property from current namspace.<\/li><\/ul><\/li><\/ul>", "guessedname": "add", "guessedtype": "function"}, "later": {"return": {"type": "", "description": "a timer object. Call the cancel() method on this object to\nstop the timer."}, "params": [{"type": "int", "name": "when", "description": "  the number of milliseconds to wait until the fn\nis executed"}, {"type": "", "name": "o", "description": " the context object"}, {"type": "Function|String", "name": "fn", "description": "  the function to execute or the name of\nthe method in the 'o' object to execute"}, {"type": "", "name": "data", "description": " [Array] data that is provided to the function.  This accepts\neither a single item or an array.  If an array is provided, the\nfunction is executed with one parameter for each array item.  If\nyou need to pass a single array parameter, it needs to be wrapped in\nan array [myarray]"}, {"type": "boolean", "name": "periodic", "description": "  if true, executes continuously at supplied\ninterval until canceled"}], "description": "Executes the supplied function in the context of the supplied\nobject 'when' milliseconds later.  Executes the function a\nsingle time unless periodic is set to true.", "guessedname": "later", "guessedtype": "function"}, "run": {"return": {"type": "Supreme", "description": "the Supreme instance"}, "description": "Execute initializers and destroyers of pooled objects with help of Queue object\nThis method also remove destroyed objects from current namespace and from pool.", "guessedname": "run", "guessedtype": "function"}, "unload": {"protected": "", "methdo": "unload", "description": "Call destroy method of the pooled objects. It executes only on window.unload event.", "guessedname": "unload", "guessedtype": "function"}}, "file": "ap.supreme-0.0.1.js", "guessedtype": "function", "shortname": "Supreme", "properties": {"p": {"protected": "", "type": "{Array}", "description": "The callback queue", "guessedname": "pool", "guessedtype": "property"}}, "description": "Manager of the project-related objects.\nEach object execute initialize or destroy method depend on reason param."}, "AP~String": {"shortname": "AP~String", "namespace": "", "name": "AP~String", "methods": {"capitalize": {"return": {"type": "String", "description": "capitalized word"}, "params": [{"type": "String", "name": "word", "description": "  word to capitalize (actually, it can be not even word, but complete sentence)"}], "description": "Change first letter to uppercase", "guessedname": "capitalize", "guessedtype": "function"}, "unescapeHTML": {"return": {"type": "HTMLCode", "description": ""}, "params": [{"type": "String", "name": "rawHTMLCode", "description": "  html code with escaped symbols"}], "description": "replace escaped HTML entities such as &amp;gt; to the valid html symbols", "guessedname": "unescapeHTML", "guessedtype": "function"}}}, "Log": {"name": "Log", "namespace": "", "module": "ap", "methods": {"log": {"return": {"type": "AP", "description": "AP instance"}, "params": [{"type": "String", "name": "msg", "description": "  The message to log."}, {"type": "String", "name": "cat", "description": "  The log category for the message.  Default\r\ncategories are \"info\", \"warn\", \"error\", time\".\r\nCustom categories can be used as well. (opt)"}, {"type": "String", "name": "src", "description": "  The source of the the message (opt)"}], "description": "If the 'debug' config is true, a 'ap:log' event will be\r\ndispatched, which the logger widget and anything else\r\ncan consume.  If the 'useConsole' config is true, it will\r\nwrite to the browser console if available.", "guessedname": "log", "guessedtype": "function"}}, "borrows": "AP#log as instance.log", "file": "ap.base-0.0.1.js", "shortname": "Log", "description": "AP universal logger"}, "Observer": {"name": "Observer", "namespace": "", "module": "ap", "guessedname": "L", "methods": {"process": {"params": [{"type": "String", "name": "selector", "description": "  css selector for element"}, {"type": "String", "name": "theEvent", "description": "  type of the event"}, {"type": "Function", "name": "handler", "description": "  handler for the event"}, {"type": "Object", "name": "context", "description": "  context for the handler function (opt)\nAlso, you can pass all this params as object with same field, or several object or array of objects"}], "guessedname": "process", "guessedtype": "function"}}, "static": "", "file": "ap.observer-0.0.1.js", "guessedtype": "property", "shortname": "Observer", "description": "Provides smooth observer pattern support via jQuery custom events"}, "ImageLoader.pngBgImgObj": {"name": "ImageLoader.pngBgImgObj", "constructors": [{"params": [{"type": "jQuery", "name": "el", "description": "  jQuery reference to the html dom element"}, {"type": "String", "name": "url", "description": "  URL for the image"}, {"type": "Object", "name": "ailProps", "description": "  The AlphaImageLoader properties to be set for the image\nValid properties are 'sizingMethod' and 'enabled'"}], "description": "PNG background image object. A PNG background image is one whose URL is specified through AlphaImageLoader or by \"background-image\" in the element's style"}], "namespace": "", "module": "imageloader", "guessedname": "backgroundPngImage", "methods": {"_applyUrl": {"guessedname": "_applyUrl", "params": [{"type": "jQuery", "name": "el", "description": " \tjQuery reference to HTML DOM element"}], "description": "Inserts the image URL into the DOM so that the image is displayed.\nIf the browser is determined to be IE6 (or older), sets the AlphaImageLoader src; otherwise sets style.backgroundImage", "private": "", "guessedtype": "function"}}, "extends": "ImageLoader.imgObj", "superclass": "ImageLoader.imgObj", "file": "ap.imageLoader-0.0.1.js", "guessedtype": "function", "shortname": "ImageLoader.pngBgImgObj", "properties": {"props": {"type": "Object", "description": "AlphaImageLoader properties to be set for the image.\nValid properties are \"sizingMethod\" and \"enabled\".", "guessedname": "props", "guessedtype": "property"}}, "description": "PNG background image object. A PNG background image is one whose URL is specified through AlphaImageLoader or by \"background-image\" in the element's style"}, "StringBuffer": {"name": "StringBuffer", "namespace": "", "module": "ap", "guessedname": "StringBuffer", "methods": {"add": {"return": {"type": "StringBuffer", "description": ""}, "description": "Add string snippet to stringbuffer. As method returns stringBuffer object itself, it is possible to chain methods", "params": [{"type": "String", "name": "elem", "description": ""}], "guessedname": "add", "guessedtype": "function", "public": ""}, "toString": {"public": "", "return": {"type": "String", "description": ""}, "description": "Return stored string snippets as one concatenated string", "guessedname": "toString", "guessedtype": "function"}}, "file": "ap.string-0.0.1.js", "guessedtype": "function", "shortname": "StringBuffer", "todo": "think about non-singleton usage", "properties": {"{Array} buffer": {"private": "", "description": "Inner array used to store string snippets", "guessedname": "buffer", "guessedtype": "property"}, "{Number} index": {"private": "", "description": "Inner index used to manage buffer indexes", "guessedname": "index", "guessedtype": "property"}}, "description": "Fast string buffer utility - usefull for robust string concatenation"}, "AP~array": {"name": "AP~array", "namespace": "", "module": "ap", "methods": {"Array.test": {"static": "", "return": {"type": "int", "description": "a number indicating the results:\r\n0: Not an array or an array-like collection\r\n1: A real array.\r\n2: array-like collection."}, "description": "Evaluates the input to determine if it is an array, array-like, or\r\nsomething else.  This is used to handle the arguments collection\r\navailable within functions, and HTMLElement collections", "guessedname": "test", "guessedtype": "function"}, "map": {"return": {"type": "Array", "description": ""}, "params": [{"type": "Function", "name": "fn", "description": "  function"}, {"type": "Array", "name": "input", "description": "  input array"}], "description": "Return new array as result of call provided function of the elements of input array", "guessedname": "map", "guessedtype": "function"}, "Array.indexOf": {"return": {"type": "int", "description": "the index of the item that contains the value or -1"}, "description": "Returns the index of the first item in the array\r\nthat contains the specified value, -1 if the\r\nvalue isn't found.\r\ntodo use native method if avail", "static": "", "guessedname": "indexOf", "guessedtype": "function", "params": [{"type": "Array", "name": "a", "description": "  the array to search"}, {"type": "", "name": "val", "description": " the value to search for"}]}, "Array.hash": {"return": {"type": "object", "description": "the hash"}, "description": "Returns an object using the first array as keys, and\r\nthe second as values.  If the second array is not\r\nprovided the value is set to true for each.", "static": "", "guessedname": "hash", "guessedtype": "function", "params": [{"type": "Array", "name": "k", "description": "  keyset"}, {"type": "Array", "name": "v", "description": "  optional valueset"}]}, "equal": {"params": [{"type": "Array", "name": "expected", "description": ""}, {"type": "Array", "name": "actual", "description": ""}], "description": "Compare length, properties (recursievly) of two arrays. If any diffences found, return false.", "guessedname": "equal", "guessedtype": "function"}, "filter": {"params": [{"type": "Array", "name": "a", "description": "  array to work with"}, {"type": "Function} function that called once for each element. If func return true, than that element will be in output. Keep it boolean.\r\nfunc will receive next params:<ul>\r\n<li>value {Object} the value of the element.<\/li>\r\n<li>index {Number} the index of the element.\r\n<li>container {Array", "name": "func", "description": "  the Array object being traversed<\/li>\r\n<\/ul>"}, {"type": "Object", "name": "c", "description": "  Context object. (opt)"}], "description": "Creates a new array with all elements that pass the test implemented by the provided function", "guessedname": "filter", "guessedtype": "function"}, "Array.each": {"static": "", "return": {"type": "AP", "description": "the AP instance"}, "description": "Executes the supplied function on each item in the array.", "guessedname": "each", "guessedtype": "property"}, "Array": {"return": {"type": "Array", "description": "the resulting array"}, "description": "A.Array(o) returns an array:\r\n- Arrays are return unmodified unless the start position is specified.\r\n- \"Array-like\" collections (@see Array.test) are converted to arrays\r\n- For everything else, a new array is created with the input as the sole item\r\n- The start position is used if the input is or is like an array to return\r\na subset of the collection.\r\ntodo this will not automatically convert elements that are also collections\r\nsuch as forms and selects.  Passing true as the third param will\r\nforce a conversion.", "static": "", "guessedname": "Array", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " the item to arrayify"}, {"type": "int", "name": "i", "description": "  if an array or array-like, this is the start index"}, {"type": "boolean", "name": "al", "description": "  if true, it forces the array-like fork.  This\r\ncan be used to avoid multiple array.test calls."}]}, "unique": {"return": {"type": "Array", "description": "new Array with uniq elements of input Array"}, "params": [{"type": "Array", "name": "inputArray", "description": "  source array"}], "description": "Return new Array with uniq elements of input Array", "guessedname": "unique", "guessedtype": "function"}}, "file": "ap.base-0.0.1.js", "shortname": "AP~array", "description": "Adds the following array utilities to the AP instance"}, "JSON": {"methods": {"stringify": {"return": {"type": "String", "description": "JSON string representation of the input"}, "description": "Converts an arbitrary value to a JSON string representation.\nCyclical object or array references are replaced with null.\nIf a whitelist is provided, only matching object keys will be included.\nIf a depth limit is provided, objects and arrays at that depth will\nbe stringified as empty.", "static": "", "guessedname": "stringify", "guessedtype": "function", "params": [{"type": "MIXED", "name": "o", "description": "  any arbitrary object to convert to JSON string"}, {"type": "Array|Function", "name": "w", "description": "  (optional) whitelist of acceptable object\nkeys to include, or a replacer function to modify the\nraw value before serialization"}, {"type": "number", "name": "d", "description": "  (optional) depth limit to recurse objects\/arrays\n(practical minimum 1)"}], "public": ""}, "dateToString": {"return": {"type": "String", "description": "stringified Date in UTC format YYYY-MM-DDTHH:mm:SSZ"}, "description": "Serializes a Date instance as a UTC date string.  Used internally by\nstringify.  Override this method if you need Dates serialized in a\ndifferent format.", "static": "", "guessedname": "dateToString", "guessedtype": "function", "params": [{"type": "Date", "name": "d", "description": "  The Date to serialize"}]}}, "shortname": "JSON", "namespace": "", "name": "JSON", "properties": {"_SPECIAL_CHARS": {"guessedname": "_SPECIAL_CHARS", "type": "{RegExp}", "description": "Regex used to capture characters that need escaping before enclosing\ntheir containing string in quotes.", "private": "", "guessedtype": "property"}, "_CHARS": {"description": "Character substitution map for common escapes and special characters.", "private": "", "static": "", "guessedname": "_CHARS", "guessedtype": "property", "type": "{Object}"}}}, "SpinnerOnSteroids": {"name": "SpinnerOnSteroids", "constructors": [{"params": [{"type": "Object} object with properties:\n<ul><li>container {jQuery} jQuery reference to html element (container)<\/li>\n<li>input {jQuery} jQuery reference to input element<\/li>\n<li>up {jQuery} jQuery reference to increase control<\/li>\n<li>down {jQuery", "name": "html", "description": "  jQuery reference to decrease control<\/li><\/ul>"}, {"type": "Function", "name": "callback", "description": "  function which invocated every time when spinner value changed. \nSpinner object as it is will be passed to callback function as first parameter."}, {"type": "Object", "name": "context", "description": "  object which will be passed to callback function as this element."}, {"type": "Number", "name": "step", "description": "  by this number input value will be changed every time user clicks on control"}, {"type": "Number", "name": "min", "description": "  min value of input. Default to 0."}, {"type": "Number", "name": "max", "description": "  max value of input. Default to 255."}], "description": "Single spinner object. Ideal if spinner alone on page, or spinners cannot be unified into one container"}], "namespace": "", "module": "spinner", "guessedname": "SpinnerOnSteroids", "file": "ap.widget.spinner-0.0.1.js", "guessedtype": "function", "shortname": "SpinnerOnSteroids", "description": "Single spinner object. Ideal if spinner alone on page, or spinners cannot be unified into one container"}, "AP~Lang": {"name": "AP~Lang", "namespace": "", "module": "ap", "guessedname": "Lang", "methods": {"isArray": {"return": {"type": "boolean", "description": "true if o is an array"}, "description": "Determines whether or not the provided object is an array.\r\nTesting typeof\/instanceof\/constructor of arrays across frame\r\nboundaries isn't possible in Safari unless you have a reference\r\nto the other frame to test against its Array prototype.  To\r\nhandle this case, we test well-known array properties instead.\r\nproperties.\r\ntodo can we kill this cross frame hack?", "static": "", "guessedname": "isArray", "guessedtype": "function", "params": [{"type": "Object", "name": "o", "description": " The object to test"}]}, "trim": {"return": {"type": "String", "description": "the trimmed string"}, "description": "Returns a string without any leading or trailing whitespace.  If\r\nthe input is not a string, the input will be returned untouched.", "static": "", "guessedname": "trim", "guessedtype": "function", "params": [{"type": "String", "name": "s", "description": "  the string to trim"}]}, "isDate": {"return": {"type": "boolean", "description": "true if o is a date"}, "description": "Determines whether or not the supplied object is a date instance", "static": "", "guessedname": "isDate", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}]}, "isString": {"return": {"type": "boolean", "description": "true if o is a string"}, "description": "Determines whether or not the provided object is a string", "static": "", "guessedname": "isString", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}]}, "isBoolean": {"return": {"type": "boolean", "description": "true if o is a boolean"}, "description": "Determines whether or not the provided object is a boolean", "static": "", "guessedname": "isBoolean", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}]}, "isNull": {"return": {"type": "boolean", "description": "true if o is null"}, "description": "Determines whether or not the provided object is null", "static": "", "guessedname": "isNull", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}]}, "isValue": {"return": {"type": "boolean", "description": "true if it is not null\/undefined\/NaN || false"}, "description": "A convenience method for detecting a legitimate non-null value.\r\nReturns false for null\/undefined\/NaN, true for other values,\r\nincluding 0\/false\/''", "static": "", "guessedname": "isValue", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The item to test"}]}, "isEmpty": {"return": {"type": "boolean", "description": "true if the item is empty"}, "description": "Checks if an item is null or is an empty array \/ empty jQuery object\r\nor an empty object (object that has no keys)", "static": "", "guessedname": "isEmpty", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " item"}]}, "isFunction": {"return": {"type": "boolean", "description": "true if o is a function"}, "description": "Determines whether or not the provided object is a function", "static": "", "guessedname": "isFunction", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}]}, "isNumber": {"return": {"type": "boolean", "description": "true if o is a number"}, "description": "Determines whether or not the provided object is a legal number", "static": "", "guessedname": "isNumber", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}]}, "isObject": {"return": {"type": "boolean", "description": "true if o is an object"}, "description": "Determines whether or not the provided object is of type object\r\nor function", "static": "", "guessedname": "isObject", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}, {"type": "boolean", "name": "failfn", "description": "  fail if the input is a function"}]}, "isUndefined": {"return": {"type": "boolean", "description": "true if o is undefined"}, "description": "Determines whether or not the provided object is undefined", "static": "", "guessedname": "isUndefined", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}]}}, "static": "", "file": "ap.base-0.0.1.js", "guessedtype": "property", "shortname": "AP~Lang", "description": "Provides the language utilites and extensions used by the library"}, "AP": {"name": "AP", "constructors": [{"params": [{"type": "", "name": "o", "description": " Optional configuration object.  Options:\r\n<ul>\r\n<li>------------------------------------------------------------------------<\/li>\r\n<li>Global:<\/li>\r\n<li>------------------------------------------------------------------------<\/li>\r\n<li>debug:\r\nTurn debug statements on or off<\/li>\r\n<li>win:\r\nThe target window\/frame<\/li>\r\n<\/ul>"}], "description": "The AP global namespace object. If AP is already defined,\r\nexisting AP object will not be overwritten so that defined\r\nnamespaces are preserved."}], "namespace": "", "module": "ap", "guessedname": "AP", "methods": {"mix": {"return": {"type": "object", "description": "the augmented object\r\ntodo review for PR2"}, "params": [{"type": "Function", "name": "r", "description": "  the object to receive the augmentation"}, {"type": "Function", "name": "s", "description": "  the object that supplies the properties to augment"}, {"type": "boolean", "name": "ov", "description": "  if true, properties already on the receiver\r\nwill be overwritten if found on the supplier."}, {"type": "string[]", "name": "wl", "description": "  a whitelist.  If supplied, only properties in\r\nthis list will be applied to the receiver."}, {"type": "int", "name": "mode", "description": " what should be copies, and to where\r\ndefault(0): object to object\r\n1: prototype to prototype (old augment)\r\n2: prototype to prototype and object props (new augment)\r\n3: prototype to object\r\n4: object to prototype"}, {"type": "boolean", "name": "merge", "description": "  merge objects instead of overwriting\/ignoring\r\nUsed by A.aggregate"}], "description": "Applies the supplier's properties to the receiver.  By default\r\nall prototype and static propertes on the supplier are applied\r\nto the corresponding spot on the receiver.  By default all\r\nproperties are applied, and a property that is already on the\r\nreciever will not be overwritten.  The default behavior can\r\nbe modified by supplying the appropriate parameters.\r\ntodo add constants for the modes", "guessedname": "mix", "guessedtype": "function"}, "use": {"return": {"type": "AP", "description": "the AP instance"}, "params": [{"type": "String", "name": "modules*", "description": "  1-n modules to bind (uses arguments array)"}, {"type": "function", "name": "*callback", "description": "  callback function executed when\r\nthe instance has the required functionality.  If included, it\r\nmust be the last parameter.\r\n<pre>\r\nAP().use('dragdrop')\r\nAP().use('dragdrop:2.4.0'); \/\/ specific version\r\nAP().use('dragdrop:2.4.0-'); \/\/ at least this version\r\nAP().use('dragdrop:2.4.0-2.9999.9999'); \/\/ version range\r\nAP().use('*'); \/\/ use all available modules\r\nAP().use('lang+dump+substitute'); \/\/ use lang and some plugins\r\nAP().use('lang+*'); \/\/ use lang and all known plugins\r\n<\/pre>"}], "description": "Bind a module to a AP instance", "guessedname": "use", "guessedtype": "function"}, "merge": {"return": {"type": "object", "description": "the new merged object"}, "params": [{"type": "Obje ct*", "name": "arguments", "description": "  the objects to merge"}], "description": "Returns a new object containing all of the properties of\r\nall the supplied objects.  The properties from later objects\r\nwill overwrite those in earlier objects.  Passing in a\r\nsingle object will create a shallow copy of it.  For a deep\r\ncopy, use clone.", "guessedname": "merge", "guessedtype": "function"}, "applyTo": {"return": {"type": "object", "description": "the return value from the applied method or null"}, "params": [{"type": "String", "name": "id", "description": "  the AP instance id"}, {"type": "String", "name": "method", "description": "  the name of the method to exectute.\r\nEx: 'Object.keys'"}, {"type": "Array", "name": "args", "description": "  the arguments to apply to the method"}], "description": "Executes a method on a AP instance with\r\nthe specified id if the specified method is whitelisted.", "guessedname": "applyTo", "guessedtype": "function"}, "namespace": {"return": {"type": "object", "description": "A reference to the last namespace object created"}, "params": [{"type": "string*", "name": "arguments", "description": " 1-n namespaces to create"}], "description": "Returns the namespace specified and creates it if it doesn't exist\r\n<pre>\r\nAP.namespace(\"property.package\");\r\nAP.namespace(\"AP.property.package\");\r\n<\/pre>\r\nEither of the above would create AP.property, then\r\nAP.property.package\r\nBe careful when naming packages. Reserved words may work in some browsers\r\nand not others. For instance, the following will fail in Safari:\r\n<pre>\r\nAP.namespace(\"really.long.nested.namespace\");\r\n<\/pre>\r\nThis fails because \"long\" is a future reserved word in ECMAScript", "guessedname": "namespace", "guessedtype": "function"}, "_setup": {"private": "", "description": "Finishes the instance setup. Attaches whatever modules were defined\r\nwhen the ap modules was registered. Load utilites, if any.", "guessedname": "_setup", "guessedtype": "function"}, "stamp": {"return": {"type": "String", "description": "The object's guid"}, "params": [{"type": "", "name": "o", "description": " The object to stamp"}], "description": "Stamps an object with a guid.  If the object already\r\nhas one, a new one is not created", "guessedname": "stamp", "guessedtype": "function"}, "add": {"return": {"type": "AP", "description": "the AP instance"}, "params": [{"type": "String", "name": "name", "description": "  module name"}, {"type": "String", "name": "namespace", "description": "  name space for the module"}, {"type": "Function", "name": "fn", "description": "  entry point into the module that\r\nis used to bind module to the AP instance"}, {"type": "String", "name": "version", "description": "  version string"}], "description": "Register a module", "guessedname": "add", "guessedtype": "function"}, "_configureEnvinronment": {"private": "", "description": "Makes development a lot easier.\r\nDefines free from conflicts shortcut $ for jQuery", "guessedname": "_configureEnvinronment", "guessedtype": "function"}, "guid": {"return": {"type": "String", "description": "the guid"}, "params": [{"type": "String", "name": "pre", "description": "  optional guid prefix"}], "description": "Generate an id that is unique among all AP instances", "guessedname": "guid", "guessedtype": "function"}, "_init": {"guessedname": "_init", "params": [{"type": "", "name": "o", "description": " config options. For details, @see <AP>"}], "description": "Initialize this AP instance", "private": "", "guessedtype": "function"}}, "file": "ap.base-0.0.1.js", "guessedtype": "function", "shortname": "AP", "properties": {"_iefix": {"guessedname": "_iefix", "param": "{Function} r  the object to receive the augmentation", "description": "IE will not enumerate native functions in a derived object even if the\r\nfunction was overridden.  This is a workaround for specific functions\r\nwe care about on the Object prototype.", "private": "", "guessedtype": "property"}}, "description": "The AP global namespace object. If AP is already defined,\r\nexisting AP object will not be overwritten so that defined\r\nnamespaces are preserved."}, "ImageLoader.image": {"name": "ImageLoader.image", "constructors": [{"params": [{"type": "String", "name": "el", "description": "  HTML DOM id of the image element"}, {"type": "String", "name": "url", "description": "  URL for the image"}, {"type": "Object", "name": "misc", "description": " \tpixel width and height of the image - defaults to image's natural size"}], "description": "Source image object. A source image is one whose URL is specified by a src attribute in the DOM element"}], "namespace": "", "module": "imageloader", "guessedname": "image", "methods": {"_applyUrl": {"guessedname": "_applyUrl", "params": [{"type": "Object", "name": "el", "description": "\tHTML DOM element"}], "description": "Inserts the image URL into the DOM so that the image is displayed.\nSets src", "private": "", "guessedtype": "function"}}, "extends": "YAHOO.util.ImageLoader.imgObj", "superclass": "YAHOO.util.ImageLoader.imgObj", "file": "ap.imageLoader-0.0.1.js", "guessedtype": "function", "shortname": "ImageLoader.image", "description": "Source image object. A source image is one whose URL is specified by a src attribute in the DOM element"}, "String": {"name": "String", "namespace": "", "module": "ap", "guessedname": "String", "file": "ap.string-0.0.1.js", "guessedtype": "property", "shortname": "String", "description": "Misc string utilites"}, "Cookie": {"name": "Cookie", "namespace": "", "module": "cookie", "guessedname": "Cookie", "methods": {"setSub": {"return": {"type": "String", "description": "The created cookie string."}, "description": "Sets a sub cookie with a given name to a particular value.", "static": "", "guessedname": "setSub", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie to set."}, {"type": "String", "name": "subName", "description": " The name of the subcookie to set."}, {"type": "Variant", "name": "value", "description": " The value to set."}, {"type": "Object", "name": "options", "description": " (Optional) An object containing one or more\ncookie options: path (a string), domain (a string), expires (a Date object),\nand secure (true\/false)."}]}, "_parseCookieHash": {"return": {"type": "Object", "description": "An object containing entries for each cookie value."}, "description": "Parses a cookie hash string into an object.", "private": "", "static": "", "guessedname": "_parseCookieHash", "guessedtype": "function", "params": [{"type": "String", "name": "text", "description": " The cookie hash string to parse (format: n1=v1&n2=v2)."}]}, "set": {"return": {"type": "String", "description": "The created cookie string."}, "description": "Sets a cookie with a given name and value.", "static": "", "guessedname": "set", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie to set."}, {"type": "Variant", "name": "value", "description": " The value to set for the cookie."}, {"type": "Object", "name": "options", "description": " (Optional) An object containing one or more\ncookie options: path (a string), domain (a string), expires (a Date object),\nand secure (true\/false)."}]}, "getMatchingTarget": {"return": {"type": "HTMLElement|jQuery|Null", "description": ""}, "params": [{"type": "Event", "name": "e", "description": ""}, {"type": "String", "name": "condition", "description": "  Css-3 compliant selector"}], "guessedname": "getMatchingTarget", "guessedtype": "function"}, "setSubs": {"return": {"type": "String", "description": "The created cookie string."}, "description": "Sets a cookie with a given name to contain a hash of name-value pairs.", "static": "", "guessedname": "setSubs", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie to set."}, {"type": "Object", "name": "value", "description": " An object containing name-value pairs."}, {"type": "Object", "name": "options", "description": " (Optional) An object containing one or more\ncookie options: path (a string), domain (a string), expires (a Date object),\nand secure (true\/false)."}]}, "get": {"return": {"type": "Variant", "description": "If no converter is specified, returns a string or null if\nthe cookie doesn't exist. If the converter is specified, returns the value\nreturned from the converter or null if the cookie doesn't exist."}, "description": "Returns the cookie value for the given name.", "static": "", "guessedname": "get", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie to retrieve."}, {"type": "Function", "name": "converter", "description": " (Optional) A function to run on the value before returning\nit. The function is not used if the cookie doesn't exist."}]}, "getMatchingTargetFast": {"return": {"type": "null|HTMLElement", "description": ""}, "params": [{"type": "Event", "name": "e", "description": "  dom event"}, {"type": "NodeType", "name": "type", "description": "  type of the element"}, {"type": "String", "name": "class", "description": "  style class of the element"}], "description": "This method does exactly the same, that getMatchingTarget method, but have a huge difference:\nIt doesn't use .is method of jQuery so that it works much faster. \nBut with this also came a limitness - cause we don't use jQuery to determine element, \nWe also cannot use it selectors. \nThis function is designed to use with thousands of same events - like keypress or mousemove.", "guessedname": "getMatchingTargetFast", "guessedtype": "function"}, "_parseCookieString": {"return": {"type": "Object", "description": "An object containing entries for each accessible cookie."}, "description": "Parses a cookie string into an object representing all accessible cookies.", "private": "", "static": "", "guessedname": "_parseCookieString", "guessedtype": "function", "params": [{"type": "String", "name": "text", "description": " The cookie string to parse."}, {"type": "Boolean", "name": "shouldDecode", "description": " (Optional) Indicates if the cookie values should be decoded or not. Default is true."}]}, "remove": {"return": {"type": "String", "description": "The created cookie string."}, "description": "Removes a cookie from the machine by setting its expiration date to\nsometime in the past.", "static": "", "guessedname": "remove", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie to remove."}, {"type": "Object", "name": "options", "description": " (Optional) An object containing one or more\ncookie options: path (a string), domain (a string),\nand secure (true\/false). The expires option will be overwritten\nby the method."}]}, "removeSub": {"return": {"type": "String", "description": "The created cookie string."}, "description": "Removes a sub cookie with a given name.", "static": "", "guessedname": "removeSub", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie in which the subcookie exists."}, {"type": "String", "name": "subName", "description": " The name of the subcookie to remove."}, {"type": "Object", "name": "options", "description": " (Optional) An object containing one or more\ncookie options: path (a string), domain (a string), expires (a Date object),\nand secure (true\/false). This must be the same settings as the original\nsubcookie."}]}, "_createCookieHashString": {"return": {"type": "String", "description": "A string suitable for use as a cookie value."}, "description": "Formats a cookie value for an object containing multiple values.", "private": "", "static": "", "guessedname": "_createCookieHashString", "guessedtype": "function", "params": [{"type": "Object", "name": "hash", "description": " An object of key-value pairs to create a string for."}]}, "getSubs": {"return": {"type": "Object", "description": "An object of name-value pairs if the cookie with the given name\nexists, null if it does not."}, "description": "Returns an object containing name-value pairs stored in the cookie with the given name.", "static": "", "guessedname": "getSubs", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie to retrieve."}]}, "getSub": {"return": {"type": "Variant", "description": "If the cookie doesn't exist, null is returned. If the subcookie\ndoesn't exist, null if also returned. If no converter is specified and the\nsubcookie exists, a string is returned. If a converter is specified and the\nsubcookie exists, the value returned from the converter is returned."}, "description": "Returns the value of a subcookie.", "static": "", "guessedname": "getSub", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie to retrieve."}, {"type": "String", "name": "subName", "description": " The name of the subcookie to retrieve."}, {"type": "Function", "name": "converter", "description": " (Optional) A function to run on the value before returning\nit. The function is not used if the cookie doesn't exist."}]}, "_createCookieString": {"return": {"type": "String", "description": "The formatted cookie string."}, "description": "Creates a cookie string that can be assigned into document.cookie.", "private": "", "static": "", "guessedname": "_createCookieString", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie."}, {"type": "String", "name": "value", "description": " The value of the cookie."}, {"type": "encodeValue", "name": "encodeValue", "description": " True to encode the value, false to leave as-is."}, {"type": "Object", "name": "options", "description": " (Optional) Options for the cookie."}]}}, "static": "", "file": "ap.cookie-0.0.1.js", "guessedtype": "property", "shortname": "Cookie", "description": "Cookie utility."}, "AP.JSON": {"name": "AP.JSON", "namespace": "", "module": "imageloader", "guessedname": "JSON", "methods": {"parse": {"return": {"type": "MIXED", "description": "the native JavaScript representation of the JSON string"}, "description": "Parse a JSON string, returning the native JavaScript representation.", "throws": "SyntaxError", "static": "", "guessedname": "parse", "guessedtype": "function", "params": [{"type": "String", "name": "s", "description": "  JSON string data"}, {"type": "function", "name": "reviver", "description": "  (optional) function(k,v) passed each key value pair of object literals, allowing pruning or altering values"}], "public": ""}, "_revive": {"return": {"type": "MIXED", "description": "The results of the filtered data"}, "description": "Traverses nested objects, applying a reviver function to each (key,value)\nfrom the scope if the key:value's containing object.  The value returned\nfrom the function will replace the original value in the key:value pair.\nIf the value returned is undefined, the key will be omitted from the\nreturned object.", "memberof": "AP.JSON", "private": "", "params": [{"type": "MIXED", "name": "data", "description": "  Any JavaScript data"}, {"type": "Function", "name": "reviver", "description": "  filter or mutation function"}], "guessedname": "_revive", "guessedtype": "function"}}, "static": "", "file": "ap.json-0.0.1.js", "guessedtype": "property", "shortname": "AP.JSON", "properties": {"{RegExp} _UNICODE_EXCEPTIONS": {"guessedname": "_UNICODE_EXCEPTIONS", "memberof": "AP.JSON", "description": "Replace certain Unicode characters that JavaScript may handle incorrectly\nduring eval--either by deleting them or treating them as line endings--with\nescape sequences.\nIMPORTANT NOTE: This regex will be used to modify the input if a match is\nfound.", "private": "", "guessedtype": "property"}, "{RegExp} _VALUES": {"guessedname": "_VALUES", "memberof": "AP.JSON", "description": "Second step in the validation.  Regex used to replace all simple\nvalues with ']' characters.", "private": "", "guessedtype": "property"}, "{RegExp} _INVALID": {"guessedname": "_INVALID", "memberof": "AP.JSON", "description": "Final step in the validation.  Regex used to test the string left after\nall previous replacements for invalid characters.", "private": "", "guessedtype": "property"}, "{RegExp} _BRACKETS": {"guessedname": "_BRACKETS", "memberof": "AP.JSON", "description": "Third step in the validation.  Regex used to remove all open square\nbrackets following a colon, comma, or at the beginning of the string.", "private": "", "guessedtype": "property"}, "{RegExp} _ESCAPES": {"guessedname": "_ESCAPES", "memberof": "AP.JSON", "description": "First step in the validation.  Regex used to replace all escape\nsequences (i.e. \"\\\\\", etc) with '@' characters (a non-JSON character).", "private": "", "guessedtype": "property"}}, "description": "Provides AP.JSON.parse method to take JSON strings and return native\nJavaScript objects.\nThe JSON Utility provides methods to serialize JavaScript objects into\nJSON strings and parse JavaScript objects from strings containing JSON data.\nThree modules are available for inclusion:\n<ol>\n<li>1. <code>json-parse<\/code> for parsing JSON strings into native JavaScript data<\/li>\n<li>2. <code>json-stringify<\/code> for stringification of JavaScript objects into JSON strings<\/li>\n<li>3. <code>json<\/code> for both parsing and stringification<\/li>\n<\/ol>\nBoth <code>json-parse<\/code> and <code>json-stringify<\/code> create functions in a static JSON class under your AP instance (e.g. A.JSON.parse(..))."}, "AP~object": {"return": "{object} the new object", "name": "AP~object", "namespace": "", "module": "ap", "guessedname": "Object", "methods": {"Object.keys": {"return": {"type": "string[]", "description": "the keys"}, "description": "Returns an array containing the object's keys", "static": "", "guessedname": "keys", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " an object"}]}, "Object.each": {"return": {"type": "AP", "description": "the AP instance"}, "description": "Executes a function on each item. The function\r\nreceives the value, the key, and the object\r\nas paramters (in that order).", "static": "", "guessedname": "each", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " the object to iterate"}, {"type": "function", "name": "f", "description": "  the function to execute"}, {"type": "", "name": "c", "description": " the execution context"}, {"type": "boolean", "name": "proto", "description": "  include proto"}]}, "equal": {"return": {"type": "Boolean", "description": "true if properties are equal, false in other way."}, "params": [{"type": "Object", "name": "expected", "description": "  object to compare with"}, {"type": "Object", "name": "actual", "description": "  object to compare with"}], "description": "Check properties presence i\\and equality of its values in two provided objects. If properties are same, return true.", "guessedname": "equal", "guessedtype": "function"}}, "static": "", "param": "o the supplier object", "file": "ap.base-0.0.1.js", "guessedtype": "function", "shortname": "AP~object", "method": "Object", "description": "A.Object(o) returns a new object based upon the supplied object."}, "ImageLoader.group": {"name": "ImageLoader.group", "constructors": [{"params": [{"type": "Number|String|Object} Also, if this parameter is string than we consider it as Observable event and register it on the observer.\nIf this parameter is number, than it will be interpreted as timeout value.\nIf this parameter is object, it will be interpretered as configure param, which contains all necessary \ninformation to register group. Must contain one of following properties: event or timeout. Details:\n<ul><li>event {String|Object} If string, than this is name of the custom event from the Observer. If object, \nthan this is DOM event which group will be subscribed to. That object must have next properties:\n<ul><li>el {String|HTMLElement} id or HTMLElement reference on which event listener will be bind<\/li>\n<li>action {String} type of the event. Ex: <code>click<\/code>, <code>mouseout<\/code>.<\/li><\/ul><\/li>\n<li>timeout {Number", "name": "o", "description": "  Timeout (time limit) length, in seconds. Can be undefined, or <= 0, for no time limit<\/li><\/ul>"}], "description": "A group for images. A group can have one time limit and a series of triggers. \nThus the images belonging to this group must share these constraints.\nUsage: <ul><li>Custom event: <code>var imageGroup = AP.ImageLoader.group('goodsItemsLoaded');<\/code><\/li>\n<li>DOM event: <code>var imageGroup = AP.ImageLoader.group({event: {el: 'goodsList', action: 'click'}});<\/code><\/li>\n<li>timeuot only: <code>var imageGroup = AP.ImageLoader.group(2);<\/code><\/li> \n<li>both timeout and event present: <code>var imageGroup = AP.ImageLoader.group({event: 'goodsItemLoaded', timeout: 2});<\/code><\/li><\/ul>"}], "namespace": "", "module": "imageloader", "guessedname": "group", "methods": {"addImage": {"params": [{"type": "Object} any number of added images. Each image descriptor must contains following properties:\n<ul><li>el {String|HTMLElement} id or reference to the html element<\/li>\n<li>url {String} url to the element. If el is not image and url doesn't contain file extension you'd better \nmanual set type of background property - png or not (we need it cause ie6 is bad with alpha-transparency)<\/li>\n<li>width {Number} width of element in pixels. (opt)<\/li>\n<li>height {Number} height of element in pixels. (opt)<\/li>\n<li>png {Boolean", "name": "o*", "description": "  how will be url applyed to the element. If <code>el.nodeName == 'IMG'<\/code> we completely don't \nneed it - url will be applyed as src. If <code>el<\/code> is not img html element, so that url will be specified as \n<code>style.backgroundImage<\/code> property. Also, with ie6 lack of alpha-transparency support, we need to define, \nneed we register background image with filter or not. Thus method would try to automatic define, is loaded image png\nor not - depends on file extension in the url. But if url doesn't determine it, we need to specify it with value of the\n<code>png<\/code> parameter.<\/li><\/ul>"}], "description": "Adds any number of images to group.", "guessedname": "addImage", "guessedtype": "function"}, "addTrigger": {"params": [{"type": "String|Object} any number of custom event names or objects which contains DOMEvent type and HTMLElement id or reference.\nIf event is object, he must contain following properties:\n<ul><li>el {String|HTMLElement} id or reference to the html element<\/li>\n<li>action {String", "name": "event*", "description": "  type of the object. Must be dom event type, like <code>click<\/code> or <code>mouseout<\/code><\/li><\/ul>"}], "description": "Adds a trigger to the group. Call this with the same style as YAHOO.util.Event.addListener", "guessedname": "addTrigger", "guessedtype": "function"}, "_onloadTasks": {"private": "", "description": "Setup to do in the window's onload\nInitiates time limit for group; executes the fold check for the images", "guessedname": "_onloadTasks", "guessedtype": "function"}, "fetch": {"description": "Displays the images in the group", "guessedname": "fetch", "guessedtype": "function"}}, "file": "ap.imageLoader-0.0.1.js", "guessedtype": "function", "shortname": "ImageLoader.group", "properties": {"_timeout": {"guessedname": "_timeout", "type": "{Object}", "description": "Timeout object to keep a handle on the time limit", "private": "", "guessedtype": "property"}, "_triggers": {"guessedname": "_triggers", "type": "{Array}", "description": "Collection of triggers for this group.\nKeeps track of each trigger's element, event, and event-listener-callback \"fetch\" function", "private": "", "guessedtype": "property"}, "_customTriggers": {"guessedname": "_customTriggers", "type": "{Array}", "description": "Collection of custom-event triggers for this group.\nKeeps track of each trigger's event object and event-listener-callback \"fetch\" function", "private": "", "guessedtype": "property"}, "_imgObjects": {"guessedname": "_imgObjects", "type": "{Object}", "description": "Collection of images registered with this group", "private": "", "guessedtype": "property"}, "timeoutLen": {"type": "{Number}", "description": "Timeout (time limit) length, in seconds", "guessedname": "timeoutLen", "guessedtype": "property"}}, "description": "A group for images. A group can have one time limit and a series of triggers. \nThus the images belonging to this group must share these constraints.\nUsage: <ul><li>Custom event: <code>var imageGroup = AP.ImageLoader.group('goodsItemsLoaded');<\/code><\/li>\n<li>DOM event: <code>var imageGroup = AP.ImageLoader.group({event: {el: 'goodsList', action: 'click'}});<\/code><\/li>\n<li>timeuot only: <code>var imageGroup = AP.ImageLoader.group(2);<\/code><\/li> \n<li>both timeout and event present: <code>var imageGroup = AP.ImageLoader.group({event: 'goodsItemLoaded', timeout: 2});<\/code><\/li><\/ul>"}, "ImageLoader.imgObj": {"name": "ImageLoader.imgObj", "constructors": [{"params": [{"type": "jQuery", "name": "el", "description": "  HTML DOM id of the image element"}, {"type": "String", "name": "url", "description": "  URL for the image"}], "description": "Base class for image objects to be registered with the groups\nmust be overrided by child class"}], "namespace": "", "module": "imageloader", "guessedname": "imgObj", "methods": {"fetch": {"description": "Displays the image; puts the URL into the DOM", "guessedname": "fetch", "guessedtype": "function"}}, "file": "ap.imageLoader-0.0.1.js", "guessedtype": "function", "shortname": "ImageLoader.imgObj", "properties": {"el": {"type": "{jQuery}", "description": "jQuery reference to the HTML image element", "guessedname": "el", "guessedtype": "property"}, "_fetched": {"guessedname": "_fetched", "type": "{Boolean}", "description": "Whether the image has already been fetched. In the case of a foldCondional group, keeps track for when the trigger is fired so images aren't fetched twice", "private": "", "guessedtype": "property"}, "url": {"type": "String", "description": "URL for the image", "guessedname": "url", "guessedtype": "property"}, "height": {"type": "{Number}", "description": "Pixel height of the image. Will be set as a \"height\" attribute after the image is fetched.\nDetaults to the natural height of the image.", "guessedname": "height", "guessedtype": "property"}, "width": {"type": "{Number}", "description": "Pixel width of the image. Will be set as a \"width\" attribute after the image is fetched.\nDetaults to the natural width of the image.", "guessedname": "width", "guessedtype": "property"}, "setVisible": {"type": "{Boolean}", "description": "Whether the style.visibility should be set to \"visible\" after the image is fetched.\nUsed when setting src images as visibility:hidden prior to image fetching", "guessedname": "setVisible", "guessedtype": "property"}}, "description": "Base class for image objects to be registered with the groups\nmust be overrided by child class"}, "ImageLoader.backgroundImage": {"name": "ImageLoader.backgroundImage", "constructors": [{"params": [{"type": "jQuery", "name": "el", "description": "  jQuery reference to the HTML element (not img element)"}, {"type": "String", "name": "url", "description": "\tURL for the image"}], "description": "Background image object. A background image is one whose URL is specified by \"background-image\" in the element's style"}], "namespace": "", "module": "imageloader", "guessedname": "backgroundImage", "methods": {"_applyUrl": {"guessedname": "_applyUrl", "params": [{"type": "Object", "name": "el", "description": "\tHTML DOM element"}], "description": "Inserts the image URL into the DOM so that the image is displayed.\nSets style.backgroundImage", "private": "", "guessedtype": "function"}}, "extends": "ImageLoader.image", "superclass": "ImageLoader.image", "file": "ap.imageLoader-0.0.1.js", "guessedtype": "function", "shortname": "ImageLoader.backgroundImage", "description": "Background image object. A background image is one whose URL is specified by \"background-image\" in the element's style"}, "History": {"name": "History", "constructors": [{"description": "History managment, for ajax-based pages"}], "namespace": "", "module": "history", "guessedname": "History", "methods": {"load": {"params": [{"type": "String", "name": "hash", "description": "  desiring hash without first #"}], "guessedname": "load", "guessedtype": "function"}, "setCheck": {"protected": "", "params": [{"type": "Boolean", "name": "check", "description": ""}], "description": "Set need we check, or not.", "guessedname": "setCheck", "guessedtype": "function"}, "getCurrentHash": {"return": {"type": "String", "description": ""}, "guessedname": "getCurrentHash", "guessedtype": "function"}}, "file": "ap.history-0.0.1.js", "guessedtype": "function", "shortname": "History", "properties": {"currentHash": {"private": ""}, "_callback": {"private": ""}}, "description": "History managment, for ajax-based pages"}}, "version": "0.0.2", "modules": {"spinner": {"description": "Really fast and memory-leaks safe spinner widget.", "submodules": [], "classlist": ["SpinnerOnSteroids"], "filelist": [], "subdata": {}, "name": "spinner"}, "supreme": {"description": "Manager of the project-related objects.\nEach object execute initialize or destroy method depend on reason param.", "submodules": [], "classlist": ["Supreme"], "filelist": ["ap.timer-0.0.1.js", "ap.widget.spinner-0.0.1.js"], "subdata": {}, "name": "supreme"}, "queue": {"description": "Mechanism to execute a series of callbacks in a non-blocking queue.  Each\ncallback is executed via setTimout unless configured with a negative\ntimeout, in which case it is run in blocking mode in the same execution\nthread as the previous callback.  Callbacks can be function references or\nobject literals with the following keys:\n<ul>\n<li><code>fn<\/code> - {Function} REQUIRED the callback function.<\/li>\n<li><code>timeout<\/code> - {number} millisecond delay to wait after previous callback completion before executing this callback.  Negative values cause immediate blocking execution.  Default 0.<\/li>\n<li><code>until<\/code> - {Function} boolean function executed before each iteration.  Return true to indicate callback completion.<\/li>\n<li><code>iterations<\/code> - {Number} number of times to execute the callback before proceeding to the next callback in the queue. Incompatible with <code>until<\/code>.<\/li>\n<\/ul>", "submodules": [], "classlist": ["Queue"], "filelist": ["ap.string-0.0.1.js"], "subdata": {}, "name": "queue"}, "ap": {"description": "AP core", "submodules": ["observer", "string"], "classlist": ["AP", "Log", "AP~Lang", "AP~array", "AP~object", "Observer", "String", "StringBuffer"], "author": "Alexander Ulizko <http:\/\/ulizko.com>", "filelist": ["ap.base-0.0.1.js", "ap.cookie-0.0.1.js", "ap.ordain-0.0.1.js", "ap.queue-0.0.1.js", "ap.supreme-0.0.1.js"], "subdata": {"string": {"name": "StringBuffer", "description": "Fast string buffer utility - usefull for robust string concatenation"}, "observer": {"name": "Observer", "description": "Provides smooth observer pattern support via jQuery custom events"}}, "name": "ap"}, "json": {"description": "Provides A.JSON.stringify method for converting objects to JSON strings.", "submodules": ["json-stringify"], "classlist": [], "filelist": ["ap.observer-0.0.1.js"], "subdata": {"json-stringify": {"name": "JSON", "description": "Provides A.JSON.stringify method for converting objects to JSON strings."}}, "static": "", "guessedname": "JSON", "guessedtype": "property", "name": "json"}, "cookie": {"description": "Utilities for cookie management", "submodules": [], "classlist": ["Cookie"], "filelist": ["ap.dom-0.0.1.js", "ap.history-0.0.1.js"], "subdata": {}, "name": "cookie"}, "imageloader": {"description": "The image loader is a framework to dynamically load images\naccording to certain triggers, enabling faster load times\nand a more responsive UI.", "submodules": [], "classlist": ["ImageLoader.group", "ImageLoader.imgObj", "ImageLoader.backgroundImage", "ImageLoader.image", "ImageLoader.pngBgImgObj", "AP.JSON"], "filelist": ["ap.json-0.0.1.js"], "subdata": {}, "name": "imageloader"}, "history": {"description": "History managment, for ajax-based pages", "submodules": [], "classlist": ["History"], "filelist": ["ap.imageLoader-0.0.1.js"], "subdata": {}, "name": "history"}}, "filemap": {"ap.dom-0.0.1.js": {"classlist": [], "name": "ap.dom-0.0.1.js", "module": "cookie"}, "ap.base-0.0.1.js": {"classlist": ["AP", "Log", "AP~Lang", "AP~array", "AP~object"], "name": "ap.base-0.0.1.js", "module": "ap"}, "ap.string-0.0.1.js": {"classlist": ["String", "StringBuffer"], "name": "ap.string-0.0.1.js", "module": "queue"}, "ap.widget.spinner-0.0.1.js": {"classlist": ["SpinnerOnSteroids"], "name": "ap.widget.spinner-0.0.1.js", "module": "supreme"}, "ap.json-0.0.1.js": {"classlist": ["AP.JSON"], "name": "ap.json-0.0.1.js", "module": "imageloader"}, "ap.history-0.0.1.js": {"classlist": ["History"], "name": "ap.history-0.0.1.js", "module": "cookie"}, "ap.ordain-0.0.1.js": {"classlist": [], "name": "ap.ordain-0.0.1.js", "module": "ap"}, "ap.queue-0.0.1.js": {"classlist": ["Queue"], "name": "ap.queue-0.0.1.js", "module": "ap"}, "ap.cookie-0.0.1.js": {"classlist": ["Cookie"], "name": "ap.cookie-0.0.1.js", "module": "ap"}, "ap.timer-0.0.1.js": {"classlist": [], "name": "ap.timer-0.0.1.js", "module": "supreme"}, "ap.supreme-0.0.1.js": {"classlist": ["Supreme"], "name": "ap.supreme-0.0.1.js", "module": "ap"}, "ap.imageLoader-0.0.1.js": {"classlist": ["ImageLoader.group", "ImageLoader.imgObj", "ImageLoader.backgroundImage", "ImageLoader.image", "ImageLoader.pngBgImgObj"], "name": "ap.imageLoader-0.0.1.js", "module": "history"}, "ap.observer-0.0.1.js": {"classlist": ["Observer"], "name": "ap.observer-0.0.1.js", "module": "json"}}}