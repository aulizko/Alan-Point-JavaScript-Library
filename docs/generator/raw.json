{"majorversion": 3, "classmap": {"StringBuffer": {"name": "StringBuffer", "constructors": [{"params": [{"type": "String", "name": "strings*", "description": "  any number of strings to concatenate"}], "description": "Fast string buffer utility - usefull for robust string concatenation"}], "namespace": "", "module": "ap", "guessedname": "StringBuffer", "methods": {"add": {"return": {"type": "StringBuffer", "description": ""}, "description": "Add string snippet to stringbuffer. As method returns stringBuffer object itself, it is possible to chain methods", "params": [{"type": "String", "name": "e", "description": ""}], "guessedname": "add", "guessedtype": "property", "public": ""}, "toString": {"public": "", "return": {"type": "String", "description": ""}, "description": "Return stored string snippets as one concatenated string", "guessedname": "toString", "guessedtype": "property"}, "empty": {"description": "Clear stored string snippets", "public": "", "guessedname": "empty", "guessedtype": "property"}}, "file": "stringBuffer.js", "guessedtype": "property", "shortname": "StringBuffer", "description": "Fast string buffer utility - usefull for robust string concatenation"}, "YUI": {"methods": {"process": {"params": [{"type": "String", "name": "selector", "description": "  css selector for element"}, {"type": "String", "name": "theEvent", "description": "  type of the event"}, {"type": "Function", "name": "handler", "description": "  handler for the event"}, {"type": "Object", "name": "context", "description": "  context for the handler function (opt)\nAlso, you can pass all this params as object with same field, or several object or array of objects"}], "guessedname": "process", "guessedtype": "function"}, "merge": {"return": {"type": "object", "description": "the new merged object"}, "params": [{"type": "Object*", "name": "arguments", "description": "  the objects to merge"}], "description": "Returns a new object containing all of the properties of\nall the supplied objects.  The properties from later objects\nwill overwrite those in earlier objects.  Passing in a\nsingle object will create a shallow copy of it.  For a deep\ncopy, use clone.", "guessedname": "merge", "guessedtype": "function"}, "extend": {"return": {"type": "AP", "description": "new class"}, "params": [{"type": "Function", "name": "r", "description": "   the object to modify"}, {"type": "Function", "name": "s", "description": " the object to inherit"}, {"type": "Object", "name": "px", "description": " prototype properties to add\/override"}, {"type": "Object", "name": "sx", "description": " static properties to add\/override"}], "description": "Utility to set up the prototype, constructor and superclass properties to\nsupport an inheritance strategy that can chain constructors and methods.\nStatic members will not be inherited.", "guessedname": "extend", "guessedtype": "function"}, "augment": {"return": {"type": "object", "description": "the augmented object"}, "params": [{"type": "Function", "name": "r", "description": "  the object to receive the augmentation"}, {"type": "Function", "name": "s", "description": "  the object that supplies the properties to augment"}, {"type": "boolean", "name": "ov", "description": "  if true, properties already on the receiver\nwill be overwritten if found on the supplier."}, {"type": "string[]", "name": "wl", "description": "  a whitelist.  If supplied, only properties in \nthis list will be applied to the receiver."}, {"type": "Array | Any", "name": "args", "description": "  arg or arguments to apply to the supplier\nconstructor when initializing."}], "description": "Applies prototype properties from the supplier to the receiver.\nThe receiver can be a constructor or an instance.", "guessedname": "augment", "guessedtype": "function"}, "mix": {"return": {"type": "object", "description": "the augmented object"}, "description": "Applies the supplier's properties to the receiver.  By default\nall prototype and static propertes on the supplier are applied\nto the corresponding spot on the receiver.  By default all\nproperties are applied, and a property that is already on the\nreciever will not be overwritten.  The default behavior can\nbe modified by supplying the appropriate parameters.", "params": [{"type": "Function", "name": "r", "description": "  the object to receive the augmentation"}, {"type": "Function", "name": "s", "description": "  the object that supplies the properties to augment"}, {"type": "boolean", "name": "ov", "description": "  if true, properties already on the receiver\nwill be overwritten if found on the supplier."}, {"type": "string[]", "name": "wl", "description": "  a whitelist.  If supplied, only properties in \nthis list will be applied to the receiver."}, {"type": "int", "name": "mode", "description": " what should be copies, and to where\ndefault(0): object to object\n1: prototype to prototype (old augment)\n2: prototype to prototype and object props (new augment)\n3: prototype to object\n4: object to prototype"}, {"type": "boolean", "name": "merge", "description": "  merge objects instead of overwriting\/ignoring\nUsed by Y.aggregate"}], "guessedname": "mix", "guessedtype": "function", "todo": "review for PR2"}}, "shortname": "YUI", "namespace": "", "name": "YUI", "properties": {"_iefix": {"guessedname": "_iefix", "param": "{Function} r  the object to receive the augmentation", "description": "IE will not enumerate native functions in a derived object even if the\nfunction was overridden.  This is a workaround for specific functions \nwe care about on the Object prototype.", "private": "", "guessedtype": "property"}}}, "AP~String": {"shortname": "AP~String", "namespace": "", "name": "AP~String", "methods": {"trim": {"return": {"type": "string", "description": "the trimmed string"}, "description": "Returns a string without any leading or trailing whitespace.  If \nthe input is not a string, the input will be returned untouched.\nRealization taken from Steven Levitahn trim11 implementation http:\/\/blog.stevenlevithan.com\/archives\/faster-trim-javascript", "static": "", "guessedname": "trim", "guessedtype": "function", "params": [{"type": "string", "name": "s", "description": "  the string to trim"}]}, "pluralize": {"return": {"type": "String", "description": "number, space and word in the right form"}, "params": [{"type": "Number", "name": "number", "description": "  a number"}, {"type": "Object", "name": "forms", "description": "  object, containing three forms of the word. The three forms must be included as properties\nwith names 1, 2, 3"}], "description": "Return pluralized string", "guessedname": "pluralize", "guessedtype": "function"}, "capitalize": {"return": {"type": "String", "description": "capitalized word"}, "params": [{"type": "String", "name": "word", "description": "  word to capitalize (actually, it can be not even word, but complete sentence)"}], "description": "Change first letter to uppercase", "guessedname": "capitalize", "guessedtype": "function"}, "unescapeHTML": {"return": {"type": "HTMLCode", "description": ""}, "params": [{"type": "String", "name": "rawHTMLCode", "description": "  html code with escaped symbols"}], "description": "replace escaped HTML entities such as &amp;gt; to the valid html symbols", "guessedname": "unescapeHTML", "guessedtype": "function"}}}, "AP.JSON": {"name": "AP.JSON", "namespace": "", "module": "imageloader", "guessedname": "JSON", "methods": {"decode": {"return": {"type": "MIXED", "description": "the native JavaScript representation of the JSON string"}, "description": "Parse a JSON string, returning the native JavaScript representation.", "throws": "SyntaxError", "static": "", "guessedname": "decode", "guessedtype": "function", "params": [{"type": "String", "name": "s", "description": "  JSON string data"}, {"type": "function", "name": "reviver", "description": "  (optional) function(k,v) passed each key value pair of object literals, allowing pruning or altering values"}], "public": ""}, "_revive": {"return": {"type": "MIXED", "description": "The results of the filtered data"}, "description": "Traverses nested objects, applying a reviver function to each (key,value)\nfrom the scope if the key:value's containing object.  The value returned\nfrom the function will replace the original value in the key:value pair.\nIf the value returned is undefined, the key will be omitted from the\nreturned object.", "memberof": "AP.JSON", "private": "", "params": [{"type": "MIXED", "name": "data", "description": "  Any JavaScript data"}, {"type": "Function", "name": "reviver", "description": "  filter or mutation function"}], "guessedname": "_revive", "guessedtype": "function"}}, "static": "", "file": "json.js", "guessedtype": "property", "shortname": "AP.JSON", "properties": {"{RegExp} _UNICODE_EXCEPTIONS": {"guessedname": "_UNICODE_EXCEPTIONS", "memberof": "AP.JSON", "description": "Replace certain Unicode characters that JavaScript may handle incorrectly\nduring eval--either by deleting them or treating them as line endings--with\nescape sequences.\nIMPORTANT NOTE: This regex will be used to modify the input if a match is\nfound.", "private": "", "guessedtype": "property"}, "{RegExp} _VALUES": {"guessedname": "_VALUES", "memberof": "AP.JSON", "description": "Second step in the validation.  Regex used to replace all simple\nvalues with ']' characters.", "private": "", "guessedtype": "property"}, "{RegExp} _INVALID": {"guessedname": "_INVALID", "memberof": "AP.JSON", "description": "Final step in the validation.  Regex used to test the string left after\nall previous replacements for invalid characters.", "private": "", "guessedtype": "property"}, "{RegExp} _BRACKETS": {"guessedname": "_BRACKETS", "memberof": "AP.JSON", "description": "Third step in the validation.  Regex used to remove all open square\nbrackets following a colon, comma, or at the beginning of the string.", "private": "", "guessedtype": "property"}, "{RegExp} _ESCAPES": {"guessedname": "_ESCAPES", "memberof": "AP.JSON", "description": "First step in the validation.  Regex used to replace all escape\nsequences (i.e. \"\\\\\", etc) with '@' characters (a non-JSON character).", "private": "", "guessedtype": "property"}}, "description": "Provides AP.JSON.decode method to take JSON strings and return native\nJavaScript objects.\nThe JSON Utility provides methods to serialize JavaScript objects into\nJSON strings and decode JavaScript objects from strings containing JSON data.\nThree modules are available for inclusion:\n<ol>\n<li>1. <code>json-decode<\/code> for parsing JSON strings into native JavaScript data<\/li>\n<li>2. <code>json-encode<\/code> for stringification of JavaScript objects into JSON strings<\/li>\n<li>3. <code>json<\/code> for both parsing and stringification<\/li>\n<\/ol>\nBoth <code>json-decode<\/code> and <code>json-encode<\/code> create functions in a static JSON class under your AP instance (e.g. A.JSON.decode(..))."}, "AP~Cookie": {"name": "AP~Cookie", "namespace": "", "module": "cookie", "guessedname": "Cookie", "methods": {"setSub": {"return": {"type": "String", "description": "The created cookie string."}, "description": "Sets a sub cookie with a given name to a particular value.", "static": "", "guessedname": "setSub", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie to set."}, {"type": "String", "name": "subName", "description": " The name of the subcookie to set."}, {"type": "Variant", "name": "value", "description": " The value to set."}, {"type": "Object", "name": "options", "description": " (Optional) An object containing one or more\ncookie options: path (a string), domain (a string), expires (a Date object),\nand secure (true\/false)."}]}, "_parseCookieHash": {"return": {"type": "Object", "description": "An object containing entries for each cookie value."}, "description": "Parses a cookie hash string into an object.", "private": "", "static": "", "guessedname": "_parseCookieHash", "guessedtype": "function", "params": [{"type": "String", "name": "text", "description": " The cookie hash string to parse (format: n1=v1&n2=v2)."}]}, "set": {"return": {"type": "String", "description": "The created cookie string."}, "description": "Sets a cookie with a given name and value.", "static": "", "guessedname": "set", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie to set."}, {"type": "Variant", "name": "value", "description": " The value to set for the cookie."}, {"type": "Object", "name": "options", "description": " (Optional) An object containing one or more\ncookie options: path (a string), domain (a string), expires (a Date object),\nand secure (true\/false)."}]}, "setSubs": {"return": {"type": "String", "description": "The created cookie string."}, "description": "Sets a cookie with a given name to contain a hash of name-value pairs.", "static": "", "guessedname": "setSubs", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie to set."}, {"type": "Object", "name": "value", "description": " An object containing name-value pairs."}, {"type": "Object", "name": "options", "description": " (Optional) An object containing one or more\ncookie options: path (a string), domain (a string), expires (a Date object),\nand secure (true\/false)."}]}, "get": {"return": {"type": "Variant", "description": "If no converter is specified, returns a string or null if\nthe cookie doesn't exist. If the converter is specified, returns the value\nreturned from the converter or null if the cookie doesn't exist."}, "description": "Returns the cookie value for the given name.", "static": "", "guessedname": "get", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie to retrieve."}, {"type": "Function", "name": "converter", "description": " (Optional) A function to run on the value before returning\nit. The function is not used if the cookie doesn't exist."}]}, "_parseCookieString": {"return": {"type": "Object", "description": "An object containing entries for each accessible cookie."}, "description": "Parses a cookie string into an object representing all accessible cookies.", "private": "", "static": "", "guessedname": "_parseCookieString", "guessedtype": "function", "params": [{"type": "String", "name": "text", "description": " The cookie string to parse."}, {"type": "Boolean", "name": "shouldDecode", "description": " (Optional) Indicates if the cookie values should be decoded or not. Default is true."}]}, "remove": {"return": {"type": "String", "description": "The created cookie string."}, "description": "Removes a cookie from the machine by setting its expiration date to\nsometime in the past.", "static": "", "guessedname": "remove", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie to remove."}, {"type": "Object", "name": "options", "description": " (Optional) An object containing one or more\ncookie options: path (a string), domain (a string),\nand secure (true\/false). The expires option will be overwritten\nby the method."}]}, "removeSub": {"return": {"type": "String", "description": "The created cookie string."}, "description": "Removes a sub cookie with a given name.", "static": "", "guessedname": "removeSub", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie in which the subcookie exists."}, {"type": "String", "name": "subName", "description": " The name of the subcookie to remove."}, {"type": "Object", "name": "options", "description": " (Optional) An object containing one or more\ncookie options: path (a string), domain (a string), expires (a Date object),\nand secure (true\/false). This must be the same settings as the original\nsubcookie."}]}, "_createCookieHashString": {"return": {"type": "String", "description": "A string suitable for use as a cookie value."}, "description": "Formats a cookie value for an object containing multiple values.", "private": "", "static": "", "guessedname": "_createCookieHashString", "guessedtype": "function", "params": [{"type": "Object", "name": "hash", "description": " An object of key-value pairs to create a string for."}]}, "getSubs": {"return": {"type": "Object", "description": "An object of name-value pairs if the cookie with the given name\nexists, null if it does not."}, "description": "Returns an object containing name-value pairs stored in the cookie with the given name.", "static": "", "guessedname": "getSubs", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie to retrieve."}]}, "getSub": {"return": {"type": "Variant", "description": "If the cookie doesn't exist, null is returned. If the subcookie\ndoesn't exist, null if also returned. If no converter is specified and the\nsubcookie exists, a string is returned. If a converter is specified and the\nsubcookie exists, the value returned from the converter is returned."}, "description": "Returns the value of a subcookie.", "static": "", "guessedname": "getSub", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie to retrieve."}, {"type": "String", "name": "subName", "description": " The name of the subcookie to retrieve."}, {"type": "Function", "name": "converter", "description": " (Optional) A function to run on the value before returning\nit. The function is not used if the cookie doesn't exist."}]}, "_createCookieString": {"return": {"type": "String", "description": "The formatted cookie string."}, "description": "Creates a cookie string that can be assigned into document.cookie.", "private": "", "static": "", "guessedname": "_createCookieString", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " The name of the cookie."}, {"type": "String", "name": "value", "description": " The value of the cookie."}, {"type": "encodeValue", "name": "encodeValue", "description": " True to encode the value, false to leave as-is."}, {"type": "Object", "name": "options", "description": " (Optional) Options for the cookie."}]}}, "static": "", "file": "cookie.js", "guessedtype": "property", "shortname": "AP~Cookie", "description": "Cookie utility."}, "String": {"name": "String", "namespace": "", "module": "ap", "guessedname": "String", "file": "string.js", "guessedtype": "property", "shortname": "String", "description": "Misc string utilites"}, "AP~specification": {"name": "AP~specification", "namespace": "", "module": "ap", "guessedname": "Specification", "methods": {"__arraySpecificationCheck": {"description": "Inner method called inside check method when array-like specification passed in", "private": "", "params": [{"type": "Array", "name": "specification", "description": "  - specification object (@see AP~specification~check)"}, {"type": "Arguments", "name": "args", "description": "  - real-world arguments which check retreived from the parent-level function"}], "guessedname": "__arraySpecificationCheck", "guessedtype": "function", "throws": "error about attribute (name) is mandatory or about attribute (name) type must be passed in"}, "__objectSpecificationCheck": {"description": "Inner method which called inside check method when object-like specification passed in", "private": "", "params": [{"type": "Object", "name": "specification", "description": "  - specification object (@see AP~specification~check)"}, {"type": "Arguments", "name": "args", "description": "  - real-world arguments which check retreived from the parent-level function"}], "guessedname": "__objectSpecificationCheck", "guessedtype": "function", "throws": "error about attribute (name) is mandatory or about attribute (name) type must be passed in"}, "check": {"static": "", "params": [{"type": "Array|Object} can be passed with three possible ways: \n<ul><li>As Object - so that every property will expect property with same name at the real-world arguments. \nEvery property can have up to two properties:\n<ul><li>required {Boolean} - if true, check should throw error if won't found that method at the real-world arguments<\/li>\n<li>type {String", "name": "specification", "description": "  - determine which type must be paramether(todo: check spelling)<\/li><\/ul><\/li>\n<li>As array - so that every property (if have true as required sub-property) expect same property at same index-based position.\nEvery property can have object-way subproperties<\/li>\n<li>As regular arguments. Works same as array-like way, but beware not to left 1 argument, cause check method should consider it like object-like way<\/li>\n<\/ul>"}], "description": "Check validates arguments, passed into parent-level function (got by arguments.callee.caller.arguments chain)\nthrough so-called specification which passed as argument to the check method itself", "guessedname": "check", "guessedtype": "function"}, "augment": {"owner {function|object} owner of the fn. optional, default value - window global object": "", "params": [{"type": "String", "name": "fn", "description": "  name of the method(function) to replace"}, {"type": "Object|Array", "name": "specification", "description": "   specification (@see AP~specification~check)"}], "description": "This method augment replace original method, passed in\nwith new function which first call check with passed in specification and arguments\nand than throw error or call old method", "guessedname": "augment", "guessedtype": "function"}, "__checkType": {"return": {"type": "Boolean", "description": "is property match type"}, "description": "Inner method called inside check method implementations which interpreur user-level type names like 'string' into\nAP~lang module method names like 'isString' and pass property into that method", "private": "", "params": [{"type": "String", "name": "requiredType", "description": "  - any-case named type. String, nUmber, Date and all that."}, {"type": "", "name": "property", "description": " - property to check type of"}], "guessedname": "__checkType", "guessedtype": "function"}}, "file": "specification.js", "guessedtype": "property", "shortname": "AP~specification", "description": "Creates Specification object to AP instance"}, "AP~array": {"methods": {"Array.test": {"static": "", "return": {"type": "int", "description": "a number indicating the results:\n0: Not an array or an array-like collection\n1: A real array.\n2: array-like collection."}, "description": "Evaluates the input to determine if it is an array, array-like, or\nsomething else.  This is used to handle the arguments collection\navailable within functions, and HTMLElement collections", "guessedname": "test", "guessedtype": "function"}, "clean": {"return": {"type": "Array", "description": "cleaned array"}, "description": "Clean input array from undefined, null values. \nInspired with MooTools clean method.", "static": "", "guessedname": "clean", "guessedtype": "function", "params": [{"type": "Array", "name": "input", "description": "  array to clean"}]}, "map": {"return": {"type": "Array", "description": ""}, "description": "Return new array as result of call provided function of the elements of input array", "static": "", "guessedname": "map", "guessedtype": "property", "params": [{"type": "Function", "name": "fn", "description": "  function"}, {"type": "Array", "name": "a", "description": "  input array"}, {"type": "Object", "name": "c", "description": "  context to function evaluate"}]}, "Array.indexOf": {"return": {"type": "int", "description": "the index of the item that contains the value or -1"}, "description": "Returns the index of the first item in the array\nthat contains the specified value, -1 if the\nvalue isn't found.\ntodo use native method if avail", "static": "", "guessedname": "indexOf", "guessedtype": "function", "params": [{"type": "Array", "name": "a", "description": "  the array to search"}, {"type": "Mixed", "name": "val", "description": "  the value to search for"}]}, "Array.hash": {"return": {"type": "object", "description": "the hash"}, "description": "Returns an object using the first array as keys, and\nthe second as values.  If the second array is not\nprovided the value is set to true for each.", "static": "", "guessedname": "hash", "guessedtype": "function", "params": [{"type": "Array", "name": "k", "description": "  keyset"}, {"type": "Array", "name": "v", "description": "  optional valueset"}]}, "filter": {"params": [{"type": "Array", "name": "a", "description": "  array to work with"}, {"type": "Function} function that called once for each element. If func return true, than that element will be in output. Keep it boolean.\nfunc will receive next params:<ul>\n<li>value {Object} the value of the element.<\/li>\n<li>index {Number} the index of the element.\n<li>container {Array", "name": "fn", "description": "  the Array object being traversed<\/li>\n<\/ul>"}, {"type": "Object", "name": "c", "description": "  Context object. (opt)"}], "description": "Creates a new array with all elements that pass the test implemented by the provided function", "guessedname": "filter", "guessedtype": "property"}, "erase": {"return": {"type": "Array", "description": "new array which doesn't contain elements equal passed value"}, "description": "Remove from the input array values, equal passed\nTODO: review to use AP.Lang.compare method to check equality", "static": "", "guessedname": "erase", "guessedtype": "function", "params": [{"type": "Array", "name": "a", "description": "  input array"}, {"type": "Mixed", "name": "val", "description": "  value to erase"}]}, "every": {"return": {"type": "Boolean", "description": "true if every elements match."}, "description": "Return true if every element of the array, evaluated with fn, return true @see MDC every method", "static": "", "guessedname": "every", "guessedtype": "property", "params": [{"type": "Array", "name": "a", "description": "  input array"}, {"type": "Function", "name": "fn", "description": "  function which will evaluate elements"}, {"type": "Object", "name": "c", "description": "  Context of the function"}]}, "Array.some": {"return": {"type": "boolean", "description": "true if the"}, "description": "Executes the supplied function on each item in the array.\nReturning true from the processing function will stop the \nprocessing of the remaining\nitems.", "static": "", "guessedname": "some", "guessedtype": "property", "params": [{"type": "Array", "name": "a", "description": "  the array to iterate"}, {"type": "Function", "name": "f", "description": "  the function to execute on each item"}, {"type": "", "name": "o", "description": " Optional context object"}]}, "Array.each": {"return": {"type": "AP", "description": "the AP instance"}, "description": "Executes the supplied function on each item in the array.", "static": "", "guessedname": "each", "guessedtype": "property", "params": [{"type": "Array", "name": "a", "description": "  input array"}, {"type": "Function", "name": "f", "description": "  function which will be executed on each item"}, {"type": "Object", "name": "o", "description": "  this context for supplied function (opt)"}]}, "Array": {"return": {"type": "Array", "description": "the resulting array"}, "description": "A.Array(o) returns an array:\n- Arrays are return unmodified unless the start position is specified.\n- \"Array-like\" collections (@see Array.test) are converted to arrays\n- For everything else, a new array is created with the input as the sole item\n- The start position is used if the input is or is like an array to return\na subset of the collection.\ntodo this will not automatically convert elements that are also collections\nsuch as forms and selects.  Passing true as the third param will\nforce a conversion.", "static": "", "guessedname": "Array", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " the item to arrayify"}, {"type": "int", "name": "i", "description": "  if an array or array-like, this is the start index"}, {"type": "boolean", "name": "al", "description": "  if true, it forces the array-like fork.  This\ncan be used to avoid multiple array.test calls."}]}, "unique": {"return": {"type": "Array", "description": "new Array with uniq elements of input Array"}, "params": [{"type": "Array", "name": "a", "description": "  source array"}], "description": "Return new Array with uniq elements of input Array", "guessedname": "unique", "guessedtype": "function"}}, "description": "Adds the following array utilities to the AP instance", "namespace": "", "module": "cookie", "file": "array.js", "shortname": "AP~array", "name": "AP~array"}, "JSON": {"methods": {"encode": {"return": {"type": "String", "description": "JSON string representation of the input"}, "description": "Converts an arbitrary value to a JSON string representation.\nCyclical object or array references are replaced with null.\nIf a whitelist is provided, only matching object keys will be included.\nIf a depth limit is provided, objects and arrays at that depth will\nbe stringified as empty.", "static": "", "guessedname": "encode", "guessedtype": "function", "params": [{"type": "MIXED", "name": "o", "description": "  any arbitrary object to convert to JSON string"}, {"type": "Array|Function", "name": "w", "description": "  (optional) whitelist of acceptable object\nkeys to include, or a replacer function to modify the\nraw value before serialization"}, {"type": "number", "name": "d", "description": "  (optional) depth limit to recurse objects\/arrays\n(practical minimum 1)"}], "public": ""}, "dateToString": {"return": {"type": "String", "description": "stringified Date in UTC format YYYY-MM-DDTHH:mm:SSZ"}, "description": "Serializes a Date instance as a UTC date string.  Used internally by\nencode.  Override this method if you need Dates serialized in a\ndifferent format.", "static": "", "guessedname": "dateToString", "guessedtype": "function", "params": [{"type": "Date", "name": "d", "description": "  The Date to serialize"}]}}, "shortname": "JSON", "namespace": "", "name": "JSON", "properties": {"_SPECIAL_CHARS": {"guessedname": "_SPECIAL_CHARS", "type": "{RegExp}", "description": "Regex used to capture characters that need escaping before enclosing\ntheir containing string in quotes.", "private": "", "guessedtype": "property"}, "_CHARS": {"description": "Character substitution map for common escapes and special characters.", "private": "", "static": "", "guessedname": "_CHARS", "guessedtype": "property", "type": "{Object}"}}}, "History": {"name": "History", "constructors": [{"description": "History managment, for ajax-based pages\nInspired with jQuery history plugin"}], "namespace": "", "module": "history", "guessedname": "History", "methods": {"load": {"params": [{"type": "String", "name": "hash", "description": "  desiring hash without first #"}], "guessedname": "load", "guessedtype": "function"}, "setCheck": {"protected": "", "params": [{"type": "Boolean", "name": "check", "description": ""}], "description": "Set need we check, or not.", "guessedname": "setCheck", "guessedtype": "function"}, "getCurrentHash": {"return": {"type": "String", "description": ""}, "guessedname": "getCurrentHash", "guessedtype": "function"}}, "file": "history.js", "guessedtype": "function", "shortname": "History", "properties": {"currentHash": {"private": ""}, "_callback": {"private": ""}}, "description": "History managment, for ajax-based pages\nInspired with jQuery history plugin"}, "ImageLoader.backgroundImage": {"name": "ImageLoader.backgroundImage", "constructors": [{"params": [{"type": "jQuery", "name": "el", "description": "  jQuery reference to the HTML element (not img element)"}, {"type": "String", "name": "url", "description": "\tURL for the image"}], "description": "Background image object. A background image is one whose URL is specified by \"background-image\" in the element's style"}], "namespace": "", "module": "imageloader", "guessedname": "backgroundImage", "methods": {"_applyUrl": {"guessedname": "_applyUrl", "params": [{"type": "Object", "name": "el", "description": "\tHTML DOM element"}], "description": "Inserts the image URL into the DOM so that the image is displayed.\nSets style.backgroundImage", "private": "", "guessedtype": "function"}}, "extends": "ImageLoader.image", "superclass": "ImageLoader.image", "file": "imageLoader.js", "guessedtype": "function", "shortname": "ImageLoader.backgroundImage", "description": "Background image object. A background image is one whose URL is specified by \"background-image\" in the element's style"}, "Lang": {"name": "Lang", "namespace": "", "module": "json", "guessedname": "Lang", "methods": {"isArray": {"return": {"type": "boolean", "description": "true if o is an array"}, "description": "Determines whether or not the provided object is an array.\nTesting typeof\/instanceof\/constructor of arrays across frame \nboundaries isn't possible in Safari unless you have a reference\nto the other frame to test against its Array prototype.  To\nhandle this case, we test well-known array properties instead.\nproperties.", "static": "", "guessedname": "isArray", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}], "todo": "can we kill this cross frame hack?"}, "isDate": {"return": {"type": "boolean", "description": "true if o is a date"}, "description": "Determines whether or not the supplied object is a date instance", "static": "", "guessedname": "isDate", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}]}, "isString": {"return": {"type": "boolean", "description": "true if o is a string"}, "description": "Determines whether or not the provided object is a string", "static": "", "guessedname": "isString", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}]}, "isBoolean": {"return": {"type": "boolean", "description": "true if o is a boolean"}, "description": "Determines whether or not the provided object is a boolean", "static": "", "guessedname": "isBoolean", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}]}, "compare": {"static": "", "params": [{"type": "", "name": "a", "description": " first item to compare"}, {"type": "", "name": "b", "description": " second item to compare"}], "description": "Deep compare of array, object, function, string and number. If value of object are equal, return true. \nOtherwise, return false. \nTODO: review maybe it is better to update this method in MochiKit way - to return -1,0,1 and being able to sort.", "guessedname": "compare", "guessedtype": "function"}, "isNull": {"return": {"type": "boolean", "description": "true if o is null"}, "description": "Determines whether or not the provided object is null", "static": "", "guessedname": "isNull", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}]}, "isValue": {"return": {"type": "boolean", "description": "true if it is not null\/undefined\/NaN || false"}, "description": "A convenience method for detecting a legitimate non-null value.\nReturns false for null\/undefined\/NaN, true for other values, \nincluding 0\/false\/''", "static": "", "guessedname": "isValue", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The item to test"}]}, "isFunction": {"return": {"type": "boolean", "description": "true if o is a function"}, "description": "Determines whether or not the provided object is a function\nNote: Internet Explorer thinks certain functions are objects:\nvar obj = document.createElement(\"object\");\nAP.Lang.isFunction(obj.getAttribute) \/\/ reports false in IE\nvar input = document.createElement(\"input\"); \/\/ append to body\nAP.Lang.isFunction(input.focus) \/\/ reports false in IE\nYou will have to implement additional tests if these functions\nmatter to you.", "static": "", "guessedname": "isFunction", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}]}, "isNumber": {"return": {"type": "boolean", "description": "true if o is a number"}, "description": "Determines whether or not the provided object is a legal number\nAlso returns true if Number object passed in", "static": "", "guessedname": "isNumber", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}]}, "isObject": {"return": {"type": "boolean", "description": "true if o is an object"}, "description": "Determines whether or not the provided object is of type object\nor function", "static": "", "guessedname": "isObject", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}, {"type": "boolean", "name": "failfn", "description": "  fail if the input is a function"}]}, "isUndefined": {"return": {"type": "boolean", "description": "true if o is undefined"}, "description": "Determines whether or not the provided object is undefined", "static": "", "guessedname": "isUndefined", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " The object to test"}]}}, "static": "", "file": "lang.js", "guessedtype": "property", "shortname": "Lang", "description": "Provides the language utilites and extensions used by the library"}, "SpinnerOnSteroids": {"name": "SpinnerOnSteroids", "constructors": [{"params": [{"type": "Object} object with properties:\n<ul><li>container {jQuery} jQuery reference to html element (container)<\/li>\n<li>input {jQuery} jQuery reference to input element<\/li>\n<li>up {jQuery} jQuery reference to increase control<\/li>\n<li>down {jQuery", "name": "html", "description": "  jQuery reference to decrease control<\/li><\/ul>"}, {"type": "Function", "name": "callback", "description": "  function which invocated every time when spinner value changed. \nSpinner object as it is will be passed to callback function as first parameter."}, {"type": "Object", "name": "context", "description": "  object which will be passed to callback function as this element."}, {"type": "Number", "name": "step", "description": "  by this number input value will be changed every time user clicks on control"}, {"type": "Number", "name": "min", "description": "  min value of input. Default to 0."}, {"type": "Number", "name": "max", "description": "  max value of input. Default to 255."}], "description": "Single spinner object. Ideal if spinner alone on page, or spinners cannot be unified into one container"}], "namespace": "", "module": "spinner", "guessedname": "SpinnerOnSteroids", "file": "ap.widget.spinner-0.0.1.js", "guessedtype": "function", "shortname": "SpinnerOnSteroids", "description": "Single spinner object. Ideal if spinner alone on page, or spinners cannot be unified into one container"}, "Queue": {"name": "Queue", "constructors": [{"params": [{"type": "Function|Object", "name": "callback*", "description": "  Any number of callbacks to initialize the queue"}], "description": "Mechanism to execute a series of callbacks in a non-blocking queue.  Each\ncallback is executed via setTimout unless configured with a negative\ntimeout, in which case it is run in blocking mode in the same execution\nthread as the previous callback.  Callbacks can be function references or\nobject literals with the following keys:\n<ul>\n<li><code>fn<\/code> - {Function} REQUIRED the callback function.<\/li>\n<li><code>timeout<\/code> - {number} millisecond delay to wait after previous callback completion before executing this callback.  Negative values cause immediate blocking execution.  Default 0.<\/li>\n<li><code>until<\/code> - {Function} boolean function executed before each iteration.  Return true to indicate callback completion.<\/li>\n<li><code>iterations<\/code> - {Number} number of times to execute the callback before proceeding to the next callback in the queue. Incompatible with <code>until<\/code>.<\/li>\n<\/ul>"}], "namespace": "", "module": "queue", "guessedname": "Queue", "methods": {"_exec": {"protected": "", "params": [{"type": "Function", "name": "fn", "description": "  the function to execute"}, {"type": "Object | Function", "name": "c", "description": "  the callback as defined during add(c)"}], "description": "Executes the callback function", "guessedname": "exec", "guessedtype": "function"}, "add": {"return": {"type": "Queue", "description": "the Queue instance"}, "params": [{"type": "Function|Object", "name": "callback*", "description": "  Any number of callbacks"}], "description": "Add any number of callbacks to the end of the queue", "guessedname": "add", "guessedtype": "function"}, "pause": {"return": {"type": "Queue", "description": "the Queue instance"}, "description": "Pause the execution of the Queue after the execution of the current\ncallback completes.  If called from code outside of a queued callback,\nclears the timeout for the pending callback. Paused Queue can be\nrestarted with q.run()", "guessedname": "pause", "guessedtype": "function"}, "run": {"return": {"type": "Queue", "description": "the Queue instance"}, "description": "Execute the queue callbacks (also resumes paused Queue).", "guessedname": "run", "guessedtype": "function"}}, "file": "ap.queue-0.0.1.js", "guessedtype": "function", "shortname": "Queue", "properties": {"p": {"protected": "", "type": "{Array}", "description": "The callback queue", "guessedname": "p", "guessedtype": "property"}, "s": {"protected": "", "type": "{number}", "description": "Timeout id used to pause or stop execution and indicate the execution\nstate of the Queue.  0 indicates paused or stopped, negatives indicate\nblocking execution, and positives indicate non-blocking execution.", "guessedname": "s", "guessedtype": "property"}}, "description": "Mechanism to execute a series of callbacks in a non-blocking queue.  Each\ncallback is executed via setTimout unless configured with a negative\ntimeout, in which case it is run in blocking mode in the same execution\nthread as the previous callback.  Callbacks can be function references or\nobject literals with the following keys:\n<ul>\n<li><code>fn<\/code> - {Function} REQUIRED the callback function.<\/li>\n<li><code>timeout<\/code> - {number} millisecond delay to wait after previous callback completion before executing this callback.  Negative values cause immediate blocking execution.  Default 0.<\/li>\n<li><code>until<\/code> - {Function} boolean function executed before each iteration.  Return true to indicate callback completion.<\/li>\n<li><code>iterations<\/code> - {Number} number of times to execute the callback before proceeding to the next callback in the queue. Incompatible with <code>until<\/code>.<\/li>\n<\/ul>"}, "AP": {"name": "AP", "constructors": [{"params": [{"type": "", "name": "o", "description": " Optional configuration object.  Options:\n<ul>\n<li>------------------------------------------------------------------------<\/li>\n<li>Global:<\/li>\n<li>------------------------------------------------------------------------<\/li>\n<li>debug:\nTurn debug statements on or off<\/li>\n<li>win:\nThe target window\/frame<\/li>\n<\/ul>"}], "description": "The AP global namespace object. If AP is already defined,\nexisting AP object will not be overwritten so that defined\nnamespaces are preserved."}], "namespace": "", "module": "ap", "guessedname": "AP", "methods": {"stamp": {"return": {"type": "String", "description": "The object's unique identifier"}, "params": [{"type": "", "name": "o", "description": " The object to stamp"}], "description": "Stamps an object with a guid.  If the object already\nhas one, a new one is not created\nImplementation was taken from YUI 3.0.0.pr1 line 448", "guessedname": "stamp", "guessedtype": "function"}, "generateUID": {"return": {"type": "String", "description": "the guid"}, "description": "Generate an id that is unique among all AP instances\ninspired by YUI 3.0 <guid> method.", "guessedname": "generateUID", "guessedtype": "function"}, "namespace": {"return": {"type": "object", "description": "A reference to the last namespace object created"}, "params": [{"type": "string*", "name": "arguments", "description": " 1-n namespaces to create"}], "description": "Returns the namespace specified and creates it if it doesn't exist\n<pre>\nAP.namespace(\"property.package\");\nAP.namespace(\"AP.property.package\");\n<\/pre>\nEither of the above would create AP.property, then\nAP.Project.property.package\nBe careful when naming packages. Reserved words may work in some browsers\nand not others. For instance, the following will fail in Safari:\n<pre>\nAP.namespace(\"really.long.nested.namespace\");\n<\/pre>\nThis fails because \"long\" is a future reserved word in ECMAScript", "guessedname": "namespace", "guessedtype": "function"}, "add": {"return": {"type": "AP", "description": "the AP instance"}, "params": [{"type": "String", "name": "name", "description": "  module name"}, {"type": "Function", "name": "fn", "description": "  entry point into the module that\nis used to bind module to the AP instance"}, {"type": "String", "name": "version", "description": "  version string"}], "description": "Register a module\nInspired from YUI.3.0.0.pr1 add module", "guessedname": "add", "guessedtype": "function"}, "init": {"guessedname": "init", "params": [{"type": "", "name": "o", "description": " config options. For details, @see <AP>"}], "description": "Initialize this AP instance", "private": "", "guessedtype": "function"}, "lambda": {"return": {"type": "Function", "description": "A function which returns the desired value."}, "params": [{"type": "Mixed", "name": "value", "description": " The value for the created function to return."}], "description": "Creates an empty function which does nothing but return the value passed.\nInspired with MooTools $lambda function\nimplementation was taken from MooTools.1.2.1 Core.js, line 201", "guessedname": "lambda", "guessedtype": "function"}}, "file": "core.js", "guessedtype": "function", "shortname": "AP", "description": "The AP global namespace object. If AP is already defined,\nexisting AP object will not be overwritten so that defined\nnamespaces are preserved."}, "ImageLoader.image": {"name": "ImageLoader.image", "constructors": [{"params": [{"type": "String", "name": "el", "description": "  HTML DOM id of the image element"}, {"type": "String", "name": "url", "description": "  URL for the image"}, {"type": "Object", "name": "misc", "description": " \tpixel width and height of the image - defaults to image's natural size"}], "description": "Source image object. A source image is one whose URL is specified by a src attribute in the DOM element"}], "namespace": "", "module": "imageloader", "guessedname": "image", "methods": {"_applyUrl": {"guessedname": "_applyUrl", "params": [{"type": "Object", "name": "el", "description": "\tHTML DOM element"}], "description": "Inserts the image URL into the DOM so that the image is displayed.\nSets src", "private": "", "guessedtype": "function"}}, "extends": "AP.ImageLoader.imgObj", "superclass": "AP.ImageLoader.imgObj", "file": "imageLoader.js", "guessedtype": "function", "shortname": "ImageLoader.image", "description": "Source image object. A source image is one whose URL is specified by a src attribute in the DOM element"}, "ImageLoader.group": {"name": "ImageLoader.group", "constructors": [{"params": [{"type": "Number|String|Object} Also, if this parameter is string than we consider it as Observable event and register it on the observer.\nIf this parameter is number, than it will be interpreted as timeout value.\nIf this parameter is object, it will be interpretered as configure param, which contains all necessary \ninformation to register group. Must contain one of following properties: event or timeout. Details:\n<ul><li>event {String|Object} If string, than this is name of the custom event from the Observer. If object, \nthan this is DOM event which group will be subscribed to. That object must have next properties:\n<ul><li>el {String|HTMLElement} id or HTMLElement reference on which event listener will be bind<\/li>\n<li>action {String} type of the event. Ex: <code>click<\/code>, <code>mouseout<\/code>.<\/li><\/ul><\/li>\n<li>timeout {Number", "name": "o", "description": "  Timeout (time limit) length, in seconds. Can be undefined, or <= 0, for no time limit<\/li><\/ul>"}], "description": "A group for images. A group can have one time limit and a series of triggers. \nThus the images belonging to this group must share these constraints.\nUsage: <ul><li>Custom event: <code>var imageGroup = AP.ImageLoader.group('goodsItemsLoaded');<\/code><\/li>\n<li>DOM event: <code>var imageGroup = AP.ImageLoader.group({event: {el: 'goodsList', action: 'click'}});<\/code><\/li>\n<li>timeuot only: <code>var imageGroup = AP.ImageLoader.group(2);<\/code><\/li> \n<li>both timeout and event present: <code>var imageGroup = AP.ImageLoader.group({event: 'goodsItemLoaded', timeout: 2});<\/code><\/li><\/ul>"}], "namespace": "", "module": "imageloader", "guessedname": "group", "methods": {"addImage": {"params": [{"type": "Object} any number of added images. Each image descriptor must contains following properties:\n<ul><li>el {String|HTMLElement} id or reference to the html element<\/li>\n<li>url {String} url to the element. If el is not image and url doesn't contain file extension you'd better \nmanual set type of background property - png or not (we need it cause ie6 is bad with alpha-transparency)<\/li>\n<li>width {Number} width of element in pixels. (opt)<\/li>\n<li>height {Number} height of element in pixels. (opt)<\/li>\n<li>png {Boolean", "name": "o*", "description": "  how will be url applyed to the element. If <code>el.nodeName == 'IMG'<\/code> we completely don't \nneed it - url will be applyed as src. If <code>el<\/code> is not img html element, so that url will be specified as \n<code>style.backgroundImage<\/code> property. Also, with ie6 lack of alpha-transparency support, we need to define, \nneed we register background image with filter or not. Thus method would try to automatic define, is loaded image png\nor not - depends on file extension in the url. But if url doesn't determine it, we need to specify it with value of the\n<code>png<\/code> parameter.<\/li><\/ul>"}], "description": "Adds any number of images to group.", "guessedname": "addImage", "guessedtype": "function"}, "addTrigger": {"params": [{"type": "String|Object} any number of custom event names or objects which contains DOMEvent type and HTMLElement id or reference.\nIf event is object, he must contain following properties:\n<ul><li>el {String|HTMLElement} id or reference to the html element<\/li>\n<li>action {String", "name": "event*", "description": "  type of the object. Must be dom event type, like <code>click<\/code> or <code>mouseout<\/code><\/li><\/ul>"}], "description": "Adds a trigger to the group. Call this with the same style as AP.util.Event.addListener", "guessedname": "addTrigger", "guessedtype": "function"}, "_onloadTasks": {"private": "", "description": "Setup to do in the window's onload\nInitiates time limit for group; executes the fold check for the images", "guessedname": "_onloadTasks", "guessedtype": "function"}, "fetch": {"description": "Displays the images in the group", "guessedname": "fetch", "guessedtype": "function"}}, "file": "imageLoader.js", "guessedtype": "function", "shortname": "ImageLoader.group", "properties": {"_timeout": {"guessedname": "_timeout", "type": "{Object}", "description": "Timeout object to keep a handle on the time limit", "private": "", "guessedtype": "property"}, "_triggers": {"guessedname": "_triggers", "type": "{Array}", "description": "Collection of triggers for this group.\nKeeps track of each trigger's element, event, and event-listener-callback \"fetch\" function", "private": "", "guessedtype": "property"}, "_customTriggers": {"guessedname": "_customTriggers", "type": "{Array}", "description": "Collection of custom-event triggers for this group.\nKeeps track of each trigger's event object and event-listener-callback \"fetch\" function", "private": "", "guessedtype": "property"}, "_imgObjects": {"guessedname": "_imgObjects", "type": "{Object}", "description": "Collection of images registered with this group", "private": "", "guessedtype": "property"}, "timeoutLen": {"type": "{Number}", "description": "Timeout (time limit) length, in seconds", "guessedname": "timeoutLen", "guessedtype": "property"}}, "description": "A group for images. A group can have one time limit and a series of triggers. \nThus the images belonging to this group must share these constraints.\nUsage: <ul><li>Custom event: <code>var imageGroup = AP.ImageLoader.group('goodsItemsLoaded');<\/code><\/li>\n<li>DOM event: <code>var imageGroup = AP.ImageLoader.group({event: {el: 'goodsList', action: 'click'}});<\/code><\/li>\n<li>timeuot only: <code>var imageGroup = AP.ImageLoader.group(2);<\/code><\/li> \n<li>both timeout and event present: <code>var imageGroup = AP.ImageLoader.group({event: 'goodsItemLoaded', timeout: 2});<\/code><\/li><\/ul>"}, "AP~OOP": {"name": "AP~OOP", "namespace": "", "module": "ap", "guessedname": "OOP", "file": "oop.js", "guessedtype": "property", "shortname": "AP~OOP", "description": "Utils collection"}, "AP~object": {"name": "AP~object", "namespace": "", "module": "json", "methods": {"Object.every": {"return": {"type": "boolean", "description": ""}, "description": "Executes provided function on each property of the supplied object.\nIf all properties value match comparator, than, return true. Otherwise, return false.", "static": "", "guessedname": "every", "guessedtype": "function", "params": [{"type": "Object", "name": "o", "description": "  object to iterate"}, {"type": "Function", "name": "f", "description": "  comparator"}, {"type": "Object", "name": "c", "description": "  execution context"}]}, "Object.filter": {"return": {"type": "Object", "description": "new object"}, "description": "Return new object based on passed in object.\nNew object contains public properties from the supplier, if passed in function return true\nwhen evaluated property value.", "static": "", "guessedname": "filter", "guessedtype": "function", "params": [{"type": "Object", "name": "o", "description": "  the object to filter"}, {"type": "Function", "name": "f", "description": "  the function to execute"}, {"type": "Object", "name": "c", "description": "  execution context"}]}, "Object": {"return": {"type": "object", "description": "the new object"}, "description": "A.Object(o) returns a new object based upon the supplied object.  \nInspired from the Douglas Crockford 'object' method", "static": "", "guessedname": "Object", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " the supplier object"}]}, "Object.clean": {"return": {"type": "Object", "description": "clean object"}, "description": "Cleans passed in object - remove properties which value is null or undefined.", "static": "", "guessedname": "clean", "guessedtype": "function", "params": [{"type": "Object", "name": "o", "description": "  'dirty' object"}]}, "Object.indexOf": {"return": {"type": "", "description": "name of the property"}, "description": "Return name of the property which value equal passed value", "static": "", "guessedname": "indexOf", "guessedtype": "function", "params": [{"type": "Object", "name": "o", "description": "  source hash"}, {"type": "", "name": "v", "description": " value to compare with"}]}, "Object.map": {"return": {"type": "Object", "description": "mapped object"}, "description": "Create mapping of the input object", "static": "", "guessedname": "map", "guessedtype": "function", "params": [{"type": "Object", "name": "o", "description": "  source object"}, {"type": "Function", "name": "f", "description": "  function to execute"}, {"type": "Object", "name": "c", "description": "  execution context"}]}, "Object.each": {"return": {"type": "AP", "description": "the AP instance"}, "description": "Executes a function on each item. The function\nreceives the value, the key, and the object\nas paramters (in that order).", "static": "", "guessedname": "each", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " the object to iterate"}, {"type": "function", "name": "f", "description": "  the function to execute"}, {"type": "", "name": "c", "description": " the execution context"}, {"type": "boolean", "name": "proto", "description": "  include proto"}]}, "Object.some": {"return": {"type": "boolean", "description": "match at least one property value comparator or not"}, "description": "Executes provided function on each property of the supplied object\nIf at least one property value, passed in the function, return true, return true.\nOtherwise, return false.", "static": "", "guessedname": "some", "guessedtype": "function", "params": [{"type": "Object", "name": "o", "description": "  object to iterate"}, {"type": "Function", "name": "f", "description": "  comparator"}, {"type": "Object", "name": "c", "description": "  execution context"}]}, "Object.keys": {"return": {"type": "string[]", "description": "the keys"}, "description": "Returns an array containing the object's keys", "static": "", "guessedname": "keys", "guessedtype": "function", "params": [{"type": "", "name": "o", "description": " an object"}]}}, "file": "object.js", "shortname": "AP~object", "description": "Adds the following Object utilities to the YUI instance"}, "Browser": {"name": "Browser", "namespace": "", "module": "cookie", "guessedname": "Browser", "static": "", "file": "browser.js", "guessedtype": "function", "shortname": "Browser", "todo": "check short detection  http:\/\/www.thespanner.co.uk\/2009\/01\/29\/detecting-browsers-javascript-hacks\/", "properties": {"webkit": {"type": "float", "static": "", "description": "AppleWebKit version.  KHTML browsers that are not WebKit browsers \nwill evaluate to 1, other browsers 0.  Example: 418.9.1\n<pre>\nSafari 1.3.2 (312.6): 312.8.1 <-- Reports 312.8 -- currently the \nlatest available for Mac OSX 10.3.\nSafari 2.0.2:         416     <-- hasOwnProperty introduced\nSafari 2.0.4:         418     <-- preventDefault fixed\nSafari 2.0.4 (419.3): 418.9.1 <-- One version of Safari may run\ndifferent versions of webkit\nSafari 2.0.4 (419.3): 419     <-- Tiger installations that have been\nupdated, but not updated\nto the latest patch.\nWebkit 212 nightly:   522+    <-- Safari 3.0 precursor (with native SVG\nand many major issues fixed).\nSafari 3.0.4 (523.12) 523.12  <-- First Tiger release - automatic update\nfrom 2.x via the 10.4.11 OS patch\n<\/pre>\nhttp:\/\/developer.apple.com\/internet\/safari\/uamatrix.html", "guessedname": "webkit", "guessedtype": "property"}, "platform": {"type": "string", "static": "", "description": "The platform property will be set to a string containing any relevant\nuser agent information.\nCurrently limited ipod\/win\/mac\/linux\/other.", "guessedname": "platform", "guessedtype": "property"}, "trident": {"type": "float", "static": "", "description": "Internet Explorer version number or 0.  Example: 6", "guessedname": "trident", "guessedtype": "property"}, "gecko": {"type": "float", "static": "", "description": "Gecko engine revision number.  Will evaluate to 1 if Gecko \nis detected but the revision could not be found. Other browsers\nwill be 0.  Example: 1.8\n<pre>\nFirefox 1.0.0.4: 1.7.8   <-- Reports 1.7\nFirefox 1.5.0.9: 1.8.0.9 <-- Reports 1.8\nFirefox 2.0.0.3: 1.8.1.3 <-- Reports 1.8\nFirefox 3 alpha: 1.9a4   <-- Reports 1.9\n<\/pre>", "guessedname": "gecko", "guessedtype": "property"}, "presto": {"type": "float", "static": "", "description": "Opera version number or 0.  Example: 9.2", "guessedname": "presto", "guessedtype": "property"}}, "description": "Browser\/platform detection"}, "Supreme": {"name": "Supreme", "constructors": [{"params": [{"type": "Object", "name": "subject*", "description": "  Any number of objects"}], "description": "Manager of the project-related objects.\nEach object execute initialize or destroy method depend on reason param."}], "namespace": "", "module": "supreme", "guessedname": "Supreme", "methods": {"add": {"return": {"type": "Supreme", "description": "the Supreme instance"}, "params": [{"type": "Object", "name": "subject*", "description": "  Any number of objects"}], "description": "Add any number of subjects. Each of them have next properties:\n<ul>\n<li><code>reason<\/code> {Boolean} - is that object needed on current page.<\/li>\n<li><code>obj<\/code> {Object | Function} - object we working with. This object must have three properties:\n<ul><li><code>initialize<\/code> {Function} - function which initialize object (todo: make this opt)<\/li>\n<li><code>destroy<\/code> {Function} - method which destroyes all cached variables, remove memory links and \nsynchronize with server if needed<\/li>\n<li><code>className<\/code> {String} or <code>getClassName<\/code> {Function} - public property or method which \nequal project name on the current namespace. Used to delete property from current namspace.<\/li><\/ul><\/li><\/ul>", "guessedname": "add", "guessedtype": "function"}, "later": {"return": {"type": "", "description": "a timer object. Call the cancel() method on this object to\nstop the timer."}, "params": [{"type": "int", "name": "when", "description": "  the number of milliseconds to wait until the fn\nis executed"}, {"type": "", "name": "o", "description": " the context object"}, {"type": "Function|String", "name": "fn", "description": "  the function to execute or the name of\nthe method in the 'o' object to execute"}, {"type": "", "name": "data", "description": " [Array] data that is provided to the function.  This accepts\neither a single item or an array.  If an array is provided, the\nfunction is executed with one parameter for each array item.  If\nyou need to pass a single array parameter, it needs to be wrapped in\nan array [myarray]"}, {"type": "boolean", "name": "periodic", "description": "  if true, executes continuously at supplied\ninterval until canceled"}], "description": "Executes the supplied function in the context of the supplied\nobject 'when' milliseconds later.  Executes the function a\nsingle time unless periodic is set to true.", "guessedname": "later", "guessedtype": "function"}, "run": {"return": {"type": "Supreme", "description": "the Supreme instance"}, "description": "Execute initializers and destroyers of pooled objects with help of Queue object\nThis method also remove destroyed objects from current namespace and from pool.", "guessedname": "run", "guessedtype": "function"}, "processTemplate": {"return": {"type": "String", "description": ""}, "params": [{"type": "String", "name": "name", "description": "  name of the template"}, {"type": "Object|Array", "name": "data", "description": "  collection of data. Can be array, hash or simple object"}], "description": "Build string from compiled template and data", "guessedname": "processTemplate", "guessedtype": "function"}, "unload": {"protected": "", "methdo": "unload", "description": "Call destroy method of the pooled objects. It executes only on window.unload event.", "guessedname": "unload", "guessedtype": "function"}}, "file": "ap.supreme-0.0.1.js", "guessedtype": "function", "shortname": "Supreme", "properties": {"p": {"protected": "", "type": "{Array}", "description": "The callback queue", "guessedname": "pool", "guessedtype": "property"}}, "description": "Manager of the project-related objects.\nEach object execute initialize or destroy method depend on reason param."}, "Observer": {"name": "Observer", "namespace": "", "module": "ap", "guessedname": "L", "static": "", "file": "observer.js", "guessedtype": "property", "shortname": "Observer", "description": "Provides smooth observer pattern support via jQuery custom events"}, "ImageLoader.pngBgImgObj": {"name": "ImageLoader.pngBgImgObj", "constructors": [{"params": [{"type": "jQuery", "name": "el", "description": "  jQuery reference to the html dom element"}, {"type": "String", "name": "url", "description": "  URL for the image"}, {"type": "Object", "name": "ailProps", "description": "  The AlphaImageLoader properties to be set for the image\nValid properties are 'sizingMethod' and 'enabled'"}], "description": "PNG background image object. A PNG background image is one whose URL is specified through AlphaImageLoader or by \"background-image\" in the element's style"}], "namespace": "", "module": "imageloader", "guessedname": "backgroundPngImage", "methods": {"_applyUrl": {"guessedname": "_applyUrl", "params": [{"type": "jQuery", "name": "el", "description": " \tjQuery reference to HTML DOM element"}], "description": "Inserts the image URL into the DOM so that the image is displayed.\nIf the browser is determined to be IE6 (or older), sets the AlphaImageLoader src; otherwise sets style.backgroundImage", "private": "", "guessedtype": "function"}}, "extends": "ImageLoader.imgObj", "superclass": "ImageLoader.imgObj", "file": "imageLoader.js", "guessedtype": "function", "shortname": "ImageLoader.pngBgImgObj", "properties": {"props": {"type": "Object", "description": "AlphaImageLoader properties to be set for the image.\nValid properties are \"sizingMethod\" and \"enabled\".", "guessedname": "props", "guessedtype": "property"}}, "description": "PNG background image object. A PNG background image is one whose URL is specified through AlphaImageLoader or by \"background-image\" in the element's style"}, "ImageLoader.imgObj": {"name": "ImageLoader.imgObj", "constructors": [{"params": [{"type": "jQuery", "name": "el", "description": "  HTML DOM id of the image element"}, {"type": "String", "name": "url", "description": "  URL for the image"}], "description": "Base class for image objects to be registered with the groups\nmust be overrided by child class"}], "namespace": "", "module": "imageloader", "guessedname": "imgObj", "methods": {"fetch": {"description": "Displays the image; puts the URL into the DOM", "guessedname": "fetch", "guessedtype": "function"}}, "file": "imageLoader.js", "guessedtype": "function", "shortname": "ImageLoader.imgObj", "properties": {"el": {"type": "{jQuery}", "description": "jQuery reference to the HTML image element", "guessedname": "el", "guessedtype": "property"}, "_fetched": {"guessedname": "_fetched", "type": "{Boolean}", "description": "Whether the image has already been fetched. In the case of a foldCondional group, keeps track for when the trigger is fired so images aren't fetched twice", "private": "", "guessedtype": "property"}, "url": {"type": "String", "description": "URL for the image", "guessedname": "url", "guessedtype": "property"}, "height": {"type": "{Number}", "description": "Pixel height of the image. Will be set as a \"height\" attribute after the image is fetched.\nDetaults to the natural height of the image.", "guessedname": "height", "guessedtype": "property"}, "width": {"type": "{Number}", "description": "Pixel width of the image. Will be set as a \"width\" attribute after the image is fetched.\nDetaults to the natural width of the image.", "guessedname": "width", "guessedtype": "property"}, "setVisible": {"type": "{Boolean}", "description": "Whether the style.visibility should be set to \"visible\" after the image is fetched.\nUsed when setting src images as visibility:hidden prior to image fetching", "guessedname": "setVisible", "guessedtype": "property"}}, "description": "Base class for image objects to be registered with the groups\nmust be overrided by child class"}}, "version": "0.0.2", "modules": {"spinner": {"description": "Really fast and memory-leaks safe spinner widget.", "submodules": [], "classlist": ["SpinnerOnSteroids"], "filelist": ["widget.js"], "subdata": {}, "name": "spinner"}, "supreme": {"description": "Manager of the project-related objects.\nEach object execute initialize or destroy method depend on reason param.", "submodules": [], "classlist": ["Supreme"], "filelist": ["templateEngine.js", "timer.js", "toolbar.js", "ap.widget.spinner-0.0.1.js"], "subdata": {}, "name": "supreme"}, "queue": {"description": "Mechanism to execute a series of callbacks in a non-blocking queue.  Each\ncallback is executed via setTimout unless configured with a negative\ntimeout, in which case it is run in blocking mode in the same execution\nthread as the previous callback.  Callbacks can be function references or\nobject literals with the following keys:\n<ul>\n<li><code>fn<\/code> - {Function} REQUIRED the callback function.<\/li>\n<li><code>timeout<\/code> - {number} millisecond delay to wait after previous callback completion before executing this callback.  Negative values cause immediate blocking execution.  Default 0.<\/li>\n<li><code>until<\/code> - {Function} boolean function executed before each iteration.  Return true to indicate callback completion.<\/li>\n<li><code>iterations<\/code> - {Number} number of times to execute the callback before proceeding to the next callback in the queue. Incompatible with <code>until<\/code>.<\/li>\n<\/ul>", "submodules": [], "classlist": ["Queue"], "filelist": ["editArea.js", "rte.js", "specification.js"], "subdata": {}, "name": "queue"}, "ap": {"description": "AP Core", "submodules": ["observer", "class", "oop", "specification", "string", "stringBuffer"], "classlist": ["AP", "Observer", "AP~OOP", "AP~specification", "String", "StringBuffer"], "author": "Alexander <xan> Ulizko", "filelist": ["color.js", "innerHTML.js", "jquery.js", "node.js", "sizzle.js", "history.js", "class.js", "oop.js", "ap.ordain-0.0.1.js", "panel.js", "ap.queue-0.0.1.js", "string.js", "stringBuffer.js", "ap.supreme-0.0.1.js"], "subdata": {"string": {"name": "String", "description": "Misc string utilites"}, "observer": {"name": "Observer", "description": "Provides smooth observer pattern support via jQuery custom events"}, "stringBuffer": {"name": "StringBuffer", "description": "Fast string buffer utility - usefull for robust string concatenation"}, "specification": {"name": "AP~specification", "description": "Creates Specification object to AP instance"}, "oop": {"name": "AP~OOP", "description": "Utils collection"}, "class": {"name": "Observer", "description": "Class module. Provide class-based OOP realization first introduced by SIMULA-67.\nRealization inspired by YUI Base class, Mootools Class (and from both Prototype and Base2, indirectly)\nAlso, some knowledges taken from Douglas Crockford \"Classical inheritance in JavaScript\" article http:\/\/javascript.crockford.com\/inheritance.html"}}, "name": "ap"}, "json": {"description": "Provides A.JSON.encode method for converting objects to JSON strings.", "submodules": ["json-encode"], "classlist": ["Lang", "AP~object"], "filelist": ["lang.js", "object.js", "observer.js"], "subdata": {"json-encode": {"name": "AP~object", "description": "Adds the following Object utilities to the YUI instance"}}, "static": "", "guessedname": "JSON", "guessedtype": "property", "name": "json"}, "cookie": {"description": "Utilities for cookie management", "submodules": [], "classlist": ["AP~array", "Browser", "AP~Cookie"], "filelist": ["array.js", "browser.js", "cookie.js", "core.js"], "subdata": {}, "name": "cookie"}, "imageloader": {"description": "The image loader is a framework to dynamically load images\naccording to certain triggers, enabling faster load times\nand a more responsive UI.", "submodules": [], "classlist": ["ImageLoader.group", "ImageLoader.imgObj", "ImageLoader.backgroundImage", "ImageLoader.image", "ImageLoader.pngBgImgObj", "AP.JSON"], "filelist": ["json.js"], "subdata": {}, "name": "imageloader"}, "history": {"description": "History managment, for ajax-based pages\nInspired with jQuery history plugin", "submodules": [], "classlist": ["History"], "filelist": ["imageLoader.js"], "subdata": {}, "name": "history"}}, "filemap": {"templateEngine.js": {"classlist": [], "name": "templateEngine.js", "module": "supreme"}, "stringBuffer.js": {"classlist": ["StringBuffer"], "name": "stringBuffer.js", "module": "ap"}, "node.js": {"classlist": [], "name": "node.js", "module": "ap"}, "json.js": {"classlist": ["AP.JSON"], "name": "json.js", "module": "imageloader"}, "array.js": {"classlist": ["AP~array"], "name": "array.js", "module": "cookie"}, "string.js": {"classlist": ["String"], "name": "string.js", "module": "ap"}, "object.js": {"classlist": ["AP~object"], "name": "object.js", "module": "json"}, "innerHTML.js": {"classlist": [], "name": "innerHTML.js", "module": "ap"}, "lang.js": {"classlist": ["Lang"], "name": "lang.js", "module": "json"}, "class.js": {"classlist": [], "name": "class.js", "module": "ap"}, "widget.js": {"classlist": [], "name": "widget.js", "module": "spinner"}, "ap.supreme-0.0.1.js": {"classlist": ["Supreme"], "name": "ap.supreme-0.0.1.js", "module": "ap"}, "oop.js": {"classlist": ["AP~OOP"], "name": "oop.js", "module": "ap"}, "jquery.js": {"classlist": [], "name": "jquery.js", "module": "ap"}, "toolbar.js": {"classlist": [], "name": "toolbar.js", "module": "supreme"}, "observer.js": {"classlist": ["Observer"], "name": "observer.js", "module": "json"}, "ap.ordain-0.0.1.js": {"classlist": [], "name": "ap.ordain-0.0.1.js", "module": "ap"}, "timer.js": {"classlist": [], "name": "timer.js", "module": "supreme"}, "history.js": {"classlist": ["History"], "name": "history.js", "module": "ap"}, "specification.js": {"classlist": ["AP~specification"], "name": "specification.js", "module": "queue"}, "cookie.js": {"classlist": ["AP~Cookie"], "name": "cookie.js", "module": "cookie"}, "imageLoader.js": {"classlist": ["ImageLoader.group", "ImageLoader.imgObj", "ImageLoader.backgroundImage", "ImageLoader.image", "ImageLoader.pngBgImgObj"], "name": "imageLoader.js", "module": "history"}, "ap.queue-0.0.1.js": {"classlist": ["Queue"], "name": "ap.queue-0.0.1.js", "module": "ap"}, "sizzle.js": {"classlist": [], "name": "sizzle.js", "module": "ap"}, "panel.js": {"classlist": [], "name": "panel.js", "module": "ap"}, "browser.js": {"classlist": ["Browser"], "name": "browser.js", "module": "cookie"}, "rte.js": {"classlist": [], "name": "rte.js", "module": "queue"}, "core.js": {"classlist": ["AP"], "name": "core.js", "module": "cookie"}, "color.js": {"classlist": [], "name": "color.js", "module": "ap"}, "ap.widget.spinner-0.0.1.js": {"classlist": ["SpinnerOnSteroids"], "name": "ap.widget.spinner-0.0.1.js", "module": "supreme"}, "editArea.js": {"classlist": [], "name": "editArea.js", "module": "queue"}}}