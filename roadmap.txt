Список требований:
1. Никаких глобальных объектов, кроме AP
2. Очень простое подключение модулей и сабмодулей.
3. Очень желательно соблюсти баланс между отсутствие функции-инициализатора (в YUI это плохо) и отсутствием версионности и контроля зависимостей.
4. Очень желательно избежать пиздеца с AP.use
5. Должен быть свой очень быстрый движок css-selector'ов с инвалидирующимся кэшем.
6. Должен иметь свой мега-способ определения браузера.
7. Каждый класс должен быть полностью затестенным.
8. Никаких изменений базовых объектов вроде Array, Object и прочего.

Примерная иерархия классов:
Base
  namespace DONE
  lambda DONE
  log DONE
  add DONE
  stamp DONE
  
  Browser DONE
    trident
    presto
    webkit
    gecko
    platform
  
  OO DONE
    merge DONE
    mix DONE
    augment DONE
    aggregate ?
    extend DONE
  
  Object DONE
    each DONE
    clear DONE
    keys DONE
    filter DONE
    map DONE
    some DONE
    every DONE
    indexOf DONE
  
  Array DONE
    each DONE
    filter DONE
    map DONE 
    some DONE
    every DONE
    foldl TODO: review
    foldr TODO: review
    unique DONE
    clean DONE
    array (return array based on provided argument) DONE
    indexOf DONE
    hash DONE
    erase DONE
  
  Lang DONE

  String DONE
    unescapeHTML DONE
    pluralize DONE
    capitalize DONE
    trim DONE
    
  StringBuffer DONE
    add DONE
    ToString DONE
    empty DONE
    
  Specification DONE
    Validators !!! (todo)
    
  Class?? (MooTools, Prototype, Base2, YUI). Almost done
    1. название метода Class
    2. он должен уметь делать extend
    3. он должен уметь делать augment
    4. он должен уметь сохранять иерархию
    5. Initializer && destructor - for the supreme. При этом нужно, чтобы инициализатор не вызывался автоматически, но зато вызывался последовательно с самого корня иерархии до последнего подкласса. Для деструктора все обратно - т.е. стартуем с последнего подкласса и добираемся до Class.
    6. он должен принимать объект attributes, и если у них есть поле "value", то он должен их инициализировать
    7. Валидаторы! Аттрибуты должны понимать, что такое валидаторы и спокойно давать его использовать.
    
  DOM:
    Query Selector DONE
    Node (in purpose to produce jQuery-like dhtml) Done
    DOM Manipulation
      setInnerHTML Done
      empty Done
      color 
      attr
      value
      class
      visibility
      remove
    DOM event binding
      getMatchingTarget (move to ordain)
      getMatchingTargetFast (same as above)
      prevent memory leaks
      Implement "live" event binding, like reglib or jQuery live provide

  FX???
    Look through simpleJS, MooTools, Dojo, jQuery :)
    query

  Widget && plugins infrastructure

  Widget
    Spinner
    ImageGallery
    Wysiwyg
    MultiUploader


  Request (IO?)
    query server
    parse response
    REST

  CouchDB.module (see DOJO, jqCouch)
    ~/projects/javascript/jqCouch
    http://jan.prima.de/~jan/plok/archives/108-Programming-CouchDB-with-Javascript.html
    http://www.cmlenz.net/archives/2007/10/couchdb-joins
    http://eflorenzano.com/blog/post/why-couchdb-rocks/
    http://blog.labnotes.org/2007/09/02/couchdb-thinking-beyond-the-rdbms/
    http://www.infoq.com/interviews/CouchDB-Damien-Katz
    

  Cookie
    get
    getSub(S)
    set
    setSub(s)
    remove
    
  History
  
  Timer
    later
    cancel
    
  ImageLoader
  
  JSON
    encode
    decode
    
  Queue (maybe, chain?)
  
  Supreme
    add
    run
    
  Observer (or use event utility to implement fireEvent and all that with our objects)
  
  Mediator (or scoped Observer)
  
  Console
  
  Profiler